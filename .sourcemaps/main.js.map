{"version":3,"sources":["../../src/pages/user/user.ts","../../src/pages/register/register.ts","../../src/providers/cep/cep.ts","../../src/services/driver-service.ts","../../src/services/prize-service.ts","../../src/pages/splash/splash.ts","../../node_modules/@angular/core/fesm5 lazy","../../src lazy","../../src/services/auth-service.ts","../../src/pages/payment-method/payment-method.ts","../../src/services/bank-service.ts","../../src/pages/tracking/tracking.ts","../../src/components/payment-gateway/payment-gateway.ts","../../src/services/deal-service.ts","../../src/services/setting-service.ts","../../src/pages/indicacao/indicacao.ts","../../src/pages/ganhos/ganhos.ts","../../src/pages/premios/premios.ts","../../src/pages/cashback/cashback.ts","../../src/pages/termos/termos.ts","../../src/pages/map/map.ts","../../src/app/main.ts","../../src/pages/home/home.ts","../../src/services/trip-service.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/Dto/VehiclesDto.ts","../../src/services/constants.ts","../../src/pages/login/login.ts","../../src/providers/cadastro-dado/cadastro-dado.ts","../../src/services/place.ts","../../src/services/place-service.ts","../../node_modules/moment/locale ^/.*$","../../src/pages/places/places.ts","../../src/components/components.module.ts","../../src/pages/payments/payments.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component} from '@angular/core';\nimport {NavController, NavParams, ToastController, LoadingController, Platform, AlertController} from 'ionic-angular';\nimport {Camera, CameraOptions} from '@ionic-native/camera';\n\nimport {LoginPage} from '../login/login';\nimport {HomePage} from \"../home/home\";\n\nimport {AuthService} from \"../../services/auth-service\";\nimport {TripService} from '../../services/trip-service';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/take';\n\n\nimport {CepProvider} from \"../../providers/cep/cep\";\nimport {BankService} from \"../../services/bank-service\";\nimport { CadastroDadoProvider } from \"../../providers/cadastro-dado/cadastro-dado\";\n\nimport * as firebase from 'firebase/app';\n\ndeclare var Stripe: any;\n\n@Component({\n    selector: 'page-user',\n    templateUrl: 'user.html'\n})\nexport class UserPage {\n    user: any = {photoUrl: '', photoCNH: '', photoComprovante: ''}; \n    tripCount = 0;\n    totalSpent = 0;\n    tabs: any = 'profile';\n    trips: Array<any>;\n    number: any;\n    exp: any;\n    cvv: any;\n    isPhoneVerified: boolean = false;\n    banks: any;\n    endereco: any;\n    tem_email: boolean = true;\n    \n    constructor(public nav: NavController, public authService: AuthService, public navParams: NavParams,\n                public camera: Camera, private cepProvider: CepProvider, public bankService: BankService,\n                public alertCtrl: AlertController, public toastCtrl: ToastController,\n                public loadingCtrl: LoadingController, public platform: Platform,\n                public dado: CadastroDadoProvider,\n                public tripService: TripService, public translate: TranslateService){\n\n        this.translate.setDefaultLang('pt-br');\n        \n        this.tem_email = true;\n\n        let userx = navParams.get('user');\n\n        if (!userx){\n            userx = this.authService.getUserData();\n        }\n        \n        this.authService.getUser(userx.uid).valueChanges().subscribe( (snapshot:any) => {\n            snapshot.uid = snapshot.$key;\n            this.user = snapshot;\n            this.user.isEmailVerified = firebase.auth().currentUser.emailVerified;\n\n            if(!this.user.email){\n                this.tem_email = false;\n            }else if(this.user.email == ''){\n                this.tem_email = false;\n            }\n\n            if(!this.user.photoUrl){\n                this.user.photoUrl = 'assets/img/no_image.jpeg';\n            }else{\n                if(this.user.photoUrl == ''){\n                    this.user.photoUrl = 'assets/img/no_image.jpeg';\n                }\n            }\n            if(!this.user.photoCNH){\n                this.user.photoCNH = 'assets/img/no_image.jpeg';\n            }else{\n                if(this.user.photoCNH == ''){\n                    this.user.photoCNH = 'assets/img/no_image.jpeg';\n                }\n            }\n            if(!this.user.photoComprovante){\n                this.user.photoComprovante = 'assets/img/no_image.jpeg';\n            }else{\n                if(this.user.photoComprovante == ''){\n                    this.user.photoComprovante = 'assets/img/no_image.jpeg';\n                }\n            }\n        });\n\n        authService.getCardSetting().subscribe( (snapshot:any) => {\n            this.number = snapshot.number;\n            this.exp = snapshot.exp;\n            this.cvv = snapshot.cvv;\n        });\n\n        this.bankService.getBanks().subscribe( (snapshot:any) => {\n            this.banks = Object.keys(snapshot).map(function (key) {\n                return snapshot[key];\n            })\n        });\n    }\n\n    // save user info\n    save() {\n        this.user.isPhoneVerified = this.isPhoneVerified;\n        this.dado.save(this.user);\n        this.authService.updateUserProfile(this.user);\n        this.nav.pop();\n        this.displayToast(\"Perfil atualizado\");\n    }\n\n    //Tira qualquer foto, plota na tela e já salva no objeto\n    takePicture(tipo: any) {\n        const options: CameraOptions = {\n            quality: 85,\n            destinationType: this.camera.DestinationType.DATA_URL,\n            encodingType: this.camera.EncodingType.JPEG,\n            mediaType: this.camera.MediaType.PICTURE,\n            allowEdit: false,\n            targetWidth:  window.screen.width,\n            targetHeight: window.screen.height,\n            sourceType: this.camera.PictureSourceType.CAMERA,\n            correctOrientation: true\n        };\n\n        this.camera.getPicture(options)\n            .then((imageData) => {\n                let base64image = 'data:image/jpeg;base64,' + imageData;\n                if(tipo == 'SELF'){\n                    this.user.photoUrl = base64image;\n                }\n                if(tipo == 'CNH'){\n                    this.user.photoCNH = base64image;\n                }\n                if(tipo == 'COMPROVANTE'){\n                    this.user.photoComprovante = base64image;\n                }\n                //Atualiza dados passageiro\n                this.authService.updateUserProfile(this.user);\n            }, (error) => {\n                console.error(error);\n            })\n            .catch((error) => {\n                console.error(error);\n            })\n    }\n\n    logout() {\n        this.authService.logout().then(() => {\n            this.nav.setRoot(LoginPage);\n        });\n    }\n\n    getTrips() {\n        let loading = this.loadingCtrl.create({content: 'Aguarde...'});\n        loading.present();\n        this.tripService.getTrips().then( (snapshot:any) => {\n            this.trips = snapshot.reverse();\n            loading.dismiss();\n        });\n    }\n\n    verifyPhone() {\n        if (this.platform.is('core')) {\n            this.displayToast(\"Only Works on Device\");\n        } else {\n            console.log(this.user.phoneNumber);\n            // (<any>window).AccountKitPlugin.loginWithPhoneNumber({\n            //     useAccessToken: true,\n            //     defaultCountryCode: \"BR\",\n            //     facebookNotificationsEnabled: true,\n            //     initialPhoneNumber: [\"+55\", this.user.phoneNumber]\n            // }, data => {\n            //     this.displayToast(\"Verificado com sucesso\");\n            //     this.user.isPhoneVerified = true;\n            //     this.authService.updateUserProfile(this.user);\n            // });\n        }\n    }\n\n    verifyEmail() {\n        firebase.auth().currentUser.sendEmailVerification().then(data => {\n            this.displayToast(\"Verifique sua caixa de e-mail\");\n        }).catch(err => console.log(err));\n    }\n\n    displayToast(message) {\n        this.toastCtrl.create({duration: 2000, message}).present();\n    }\n\n    // save card settings\n    saveCard() {\n        const exp = this.exp.split('/');\n        const loading = this.loadingCtrl.create({\n            content: 'Aguarde...'\n        });\n        loading.present();\n\n        Stripe.card.createToken({\n          number: this.number,\n          exp_month: exp[0],\n          exp_year: exp[1],\n          cvc: this.cvv\n        }, (status: number, response: any) => {\n          loading.dismiss();\n          // success\n          if (status == 200) {\n            // if nav from payment method selection\n            if (this.navParams.get('back')) {\n              this.nav.pop();\n            } else {\n              this.nav.setRoot(HomePage);\n            }\n\n            this.authService.updateCardSetting(this.number, this.exp, this.cvv, response.id);\n            let toast = this.toastCtrl.create({\n              message: 'Your card setting has been updated',\n              duration: 3000,\n              position: 'middle'\n            });\n            toast.present();\n          } else {\n            // error\n            let alert = this.alertCtrl.create({\n              title: 'Error',\n              subTitle: response.error.message,\n              buttons: ['OK']\n            });\n            alert.present();\n          }\n        });\n    }\n\n    async getCep() {\n        this.loader('Procurando Endereço...');\n\n        if (this.user.zipcode.length > 0) {\n\n            try {\n                this.cepProvider.cep(this.user.zipcode)\n                    .then(data => {\n                        this.endereco = data;\n                        if (!this.endereco.erro) {\n                            this.user.address = this.endereco.logradouro;\n                            this.user.neighborhood = this.endereco.bairro;\n                            this.user.city = this.endereco.localidade;\n                            this.user.state = this.endereco.uf;\n                        } else {\n                            this.showAlertCep();\n                        }\n                    });\n            } catch (e) {\n                this.showAlertCep();\n            }\n        }\n    }\n\n    loader(message) {\n        const loader = this.loadingCtrl.create({\n            content: message,\n            duration: 2000\n        });\n        loader.present();\n    }\n\n    showAlertCep() {\n        const alert = this.alertCtrl.create({\n            title: 'Ocorreu um erro',\n            subTitle: 'Não foi posssível encontrar seu endereço pelo CEP informado.',\n            buttons: ['OK']\n        });\n        alert.present();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/user.ts","import { Component } from '@angular/core';\nimport { NavController, LoadingController, AlertController, NavParams, Platform, ToastController } from 'ionic-angular';\nimport { LoginPage } from '../login/login';\nimport { AuthService } from \"../../services/auth-service\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { File } from \"@ionic-native/file/ngx\";\nimport { AngularFireDatabase } from \"@angular/fire/database/database\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { CepProvider } from \"../../providers/cep/cep\";\nimport { CadastroDadoProvider } from \"../../providers/cadastro-dado/cadastro-dado\";\nimport 'rxjs/add/operator/take';\n\n\n@Component({\n    selector: 'page-register',\n    templateUrl: 'register.html'\n})\n\nexport class RegisterPage {\n    user: any;\n    origin = '';\n    form: FormGroup;\n    email: string = \"\";\n    password: string = \"\";\n    name: string = \"\";\n    phoneNumber: string = \"\";\n    endereco: any = [];\n    tabs: any = 'profile';\n    uid = '';\n    me: any = {};\n    snapshot: any = [];\n    indicadoPor: any;\n    buttonText = '';\n\n    //photoPreview;\n    //photo = '';\n    isCpfValid: boolean;\n    showCpfValidation: boolean;\n\n    //@ViewChild('inputFilePhoto')\n    //inputFilePhoto: TextInput;\n\n    private year = null;\n    private currentTime = null;\n\n    public TermoUsoAppAceitou = false;\n\n\n    constructor(public nav: NavController, public authService: AuthService, public alertCtrl: AlertController, \n        public loadingCtrl: LoadingController, public translate: TranslateService, private navParams: NavParams,\n        public file: File, private formBuilder: FormBuilder, public db: AngularFireDatabase,\n        public dado: CadastroDadoProvider,\n        public toast: ToastController,\n        public platform: Platform,\n        public cepProvider: CepProvider) {\n\n        this.form = this.formBuilder.group({\n            name: ['', Validators.compose([Validators.required, Validators.maxLength(255)])],\n            email: ['', [Validators.required, Validators.email, Validators.maxLength(255)]],\n            password: ['', Validators.compose([Validators.required, Validators.maxLength(14), Validators.minLength(6)])],\n            phoneNumber: ['', Validators.compose([Validators.required, Validators.maxLength(15)])],\n            itin: ['', Validators.compose([Validators.required, Validators.maxLength(14)])],\n            //id_card: ['', Validators.compose([Validators.required, Validators.maxLength(13)])],\n            birthdate: ['', Validators.compose([Validators.required])],\n            //gender: ['', Validators.compose([Validators.required])],\n            //zipcode: ['', Validators.compose([Validators.required])],\n            //address: ['', Validators.compose([Validators.required])],\n            //number: ['', Validators.compose([Validators.required])],\n            //complement: [''],\n            //neighborhood: ['', Validators.compose([Validators.required])],\n            //city: ['', Validators.compose([Validators.required])],\n            //state: ['', Validators.compose([Validators.required])],\n            //photo: ['', Validators.compose([Validators.required])],\n            indicadoPor: [''],\n            minhaIndicacao: ['']\n        });\n\n        this.origin = this.navParams.get('origin');\n\n        if (this.origin == 'login') {\n            this.snapshot = this.navParams.get('snapshot');\n            this.form.controls.indicadoPor.setValue(this.snapshot.codigo_indicacao);\n            this.form.controls.minhaIndicacao.setValue(this.snapshot.codigo_afiliacao);\n            this.getCadastroDado();\n            this.buttonText = 'Salvar Dados';\n        }\n        else {\n            this.indicadoPor = this.navParams.get('indicadoPor');\n            this.form.controls.indicadoPor.setValue(this.indicadoPor.codigo_afiliacao);\n            this.form.controls.minhaIndicacao.setValue(this.navParams.get('minhaIndicacao'));\n            this.buttonText = 'Criar Conta';\n        }\n\n        this.dateParams();\n    }\n\n    getCadastroDado() {\n        let sForm = this.form;\n\n        //Verifica cadastro dado\n        sForm.controls.name.setValue(this.snapshot.primeiro_nome + ' ' + this.snapshot.segundo_nome);\n        sForm.controls.email.setValue(this.snapshot.email);\n        sForm.controls.birthdate.setValue(this.snapshot.data_nascimento);\n        sForm.controls.itin.setValue(this.snapshot.cpf);\n        //sForm.controls.id_card.setValue(this.snapshot.rg);\n        sForm.controls.phoneNumber.setValue(this.snapshot.telefone);\n        //sForm.controls.gender.setValue(this.snapshot.sexo);\n        //sForm.controls.address.setValue(this.snapshot.endereço);\n        //sForm.controls.zipcode.setValue(this.snapshot.cep);\n        //sForm.controls.complement.setValue(this.snapshot.complemento);\n\n        /*\n        this.cepProvider.cep(this.snapshot.cep)\n            .then(data => {\n                    this.endereco = data;\n                    if (!this.endereco.erro) {\n                        sForm.controls.neighborhood.setValue(this.endereco.bairro);\n                        sForm.controls.city.setValue(this.endereco.localidade);\n                        sForm.controls.state.setValue(this.endereco.uf);\n                    }\n                }\n            );\n        */\n\n        const alert = this.alertCtrl.create({\n            title: 'Dado App',\n            cssClass: 'alertnormal',\n            message: 'Verificamos que seu cadastro pode estar incompleto. Por favor, verifique e complete suas informações.',\n            buttons: [{\n                text: 'OK',\n                cssClass: 'oknormalcss',\n            }]\n        });\n        alert.present();\n    }\n\n    getDbDado() {\n        return this.db.list('pessoas',ref => ref.orderByChild('email').equalTo(this.me.email)).valueChanges();\n        \n    }\n\n    /*\n        {\n            query: {\n                orderByChild: 'email',\n                equalTo: this.me.email,\n            }\n        });\n\n\n    selectPhoto() {\n        const nativeElement = this.inputFilePhoto.getElementRef().nativeElement;\n        const inputFile = nativeElement.querySelector('input');\n        inputFile.click();\n    }\n    */\n\n    /*\n    onChosePhoto(files: FileList) {\n       /* if (!files.length) {\n            return;\n        }\n\n        this.makePhotoPreview(files[0]);\n        this.form.get('photo').setValue(files[0]);*/\n    //}\n\n    /*\n    makePhotoPreview(file: File) {\n        /*const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = (event: ProgressEvent) => {\n            const target = event.target;\n            this.photoPreview = (<any>target).result;\n        }*/\n    //}\n\n    submit() {\n       \n\n            try {\n\n                let loading = this.loadingCtrl.create({ content: 'Criando conta...' });\n                loading.present();\n\n                this.user = this.form.value;\n                let mes = ((new Date().getMonth() + 1) > 9) ? (new Date().getMonth() + 1) : '0' + (new Date().getMonth() + 1)\n                this.user.data_cadastro = new Date().getFullYear() + '-' + mes + '-' + new Date().getDate();\n                this.user.origem = \"1\"; //app passageiro\n\n                this.dado.save_register(this.user).then(response => {\n                    loading.dismiss();\n\n                    this.authService.register(this.user).subscribe(authData => {\n\n                        this.toast.create({ message: 'Sucesso! Informe Email e Senha para ENTRAR', duration: 5000 }).present();\n\n                        this.nav.setRoot(LoginPage);\n\n                    }, error => {\n                        loading.dismiss();\n                        let alert = this.alertCtrl.create({\n                            message: error.message,\n                            buttons: ['OK']\n                        });\n                        alert.present();\n                    });\n\n\n                }, (error: any) => {\n                    loading.dismiss();\n                    let alert = this.alertCtrl.create({\n                        message: \"ocorreu um erro ao registrar. por favor, tente novamente.\",\n                        buttons: ['ok']\n                    });\n                    alert.present();\n                });\n\n            } catch (e) {\n                let alert = this.alertCtrl.create({\n                    message: e.message,\n                    buttons: ['OK']\n                });\n                alert.present();\n            }\n    }\n\n    dateParams() {\n        this.currentTime = new Date();\n        this.year = this.currentTime.getFullYear();\n        this.year = this.year - 18;\n    }\n\n    signup() {\n        /* console.log(this.photo);\n         if (this.photo){\n             let storageRef = firebase.storage().ref();\n             let path = '/users/' + Date.now() + this.photo;\n             let iRef = storageRef.child(path);\n             iRef.put(this.photo).then((snapshot) => {\n                 this.userInfo.photoURL = snapshot.downloadURL;\n             });\n         }\n */\n        this.alertCtrl.create({ message: 'Demonstração do app Dado.', buttons: ['OK'] }).present();\n        /* let loading = this.loadingCtrl.create({content: 'Criando conta...'});\n         loading.present();\n         this.authService.register(this.userInfo).subscribe(() => {\n             loading.dismiss();\n             this.alertCtrl.create({message: 'Conta criada com sucesso', buttons: ['OK']}).present();\n         }, error => {\n             loading.dismiss();\n             this.alertCtrl.create({message: error.message, buttons: ['OK']}).present();\n         });*/\n    }\n\n    async takePicture() {\n        /*this.photo = '';\n\n        const options: CameraOptions = {\n            quality: 85,\n            destinationType: this.camera.DestinationType.DATA_URL,\n            encodingType: this.camera.EncodingType.JPEG,\n            mediaType: this.camera.MediaType.PICTURE,\n            correctOrientation: true,\n            allowEdit: true,\n            cameraDirection: this.camera.Direction.FRONT,\n            targetWidth: window.screen.width,\n            targetHeight: window.screen.height,\n            sourceType: this.camera.PictureSourceType.CAMERA,\n        };\n\n        const photo = await this.camera.getPicture(options)\n            .then((imageData) => {\n                let base64image = 'data:image/jpeg;base64,' + imageData;\n                this.photo = base64image;\n                this.writeFile(base64image, 'dadopic', 'dadoavatar.jpg');\n\n            }, (error) => {\n                console.error(error);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n\n        console.log(this.photoPreview);*/\n    }\n\n    async getCep() {\n        let loading = this.loadingCtrl.create({ content: 'Procurando endereço...' });\n        loading.present();\n        let sForm = this.form;\n        let cep = sForm.controls.zipcode.value;\n\n        if (cep.toString().length > 0) {\n\n            try {\n                await this.cepProvider.cep(cep)\n                    .then(data => {\n                        this.endereco = data;\n                        loading.dismiss();\n                        if (!this.endereco.erro) {\n                            sForm.controls.address.setValue(this.endereco.logradouro);\n                            sForm.controls.complement.setValue(' ');\n                            sForm.controls.neighborhood.setValue(this.endereco.bairro);\n                            sForm.controls.city.setValue(this.endereco.localidade);\n                            sForm.controls.state.setValue(this.endereco.uf);\n                            /*this.user.address = this.endereco.logradouro;\n                            this.user.neighborhood = this.endereco.bairro;\n                            this.user.city = this.endereco.localidade;\n                            this.user.state = this.endereco.uf;\n                            this.user.complement = ' ';*/\n                        } else {\n                            this.showAlertCep();\n                        }\n                    });\n            } catch (e) {\n                this.showAlertCep();\n            }\n        }\n    }\n\n    //here is the method is used to write a file in storage\n    writeFile(base64Data: any, folderName: string, fileName: any) {\n        /*let content: any;\n        let contentType = this.getContentType(base64Data);\n        let DataBlob = this.base64toBlob(content, contentType);\n        // here iam mentioned this line this.file.externalRootDirectory is a native pre-defined file path storage. You can change a file path whatever pre-defined method.\n        let filePath = this.file.externalRootDirectory + folderName;\n        this.file.writeFile(filePath, fileName, DataBlob, contentType).then((success) => {\n            console.log(\"File Writed Successfully\", success);\n            console.log('pic', filePath, fileName);\n        }).catch((err) => {\n            console.log(\"Error Occured While Writing File\", err);\n        })*/\n    }\n\n    //here is the method is used to get content type of an bas64 data\n    getContentType(base64Data: any) {\n        /*let block = base64Data.split(\";\");\n        let contentType = block[0].split(\":\")[1];\n        return contentType;*/\n    }\n\n    //here is the method is used to convert base64 data to blob data\n    base64toBlob(b64Data, contentType) {\n        /*contentType = contentType || '';\n        let sliceSize = 512;\n        let byteCharacters = atob(b64Data);\n        let byteArrays = [];\n        for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n            let slice = byteCharacters.slice(offset, offset + sliceSize);\n            let byteNumbers = new Array(slice.length);\n            for (let i = 0; i < slice.length; i++) {\n                byteNumbers[i] = slice.charCodeAt(i);\n            }\n            var byteArray = new Uint8Array(byteNumbers);\n            byteArrays.push(byteArray);\n        }\n        let blob = new Blob(byteArrays, {\n            type: contentType\n        });\n        return blob;*/\n    }\n\n    login() {\n        this.nav.setRoot(LoginPage);\n    }\n\n    showAlertCep() {\n        const alert = this.alertCtrl.create({\n            title: 'Ocorreu um erro',\n            subTitle: 'Não foi posssível encontrar seu endereço pelo CEP informado.',\n            buttons: ['OK']\n        });\n        alert.present();\n    }\n\n    validaCpf() {\n\n        let sForm = this.form;\n        let cpf = sForm.controls.itin.value;\n        this.isCpfValid = false;\n        this.showCpfValidation = true;\n\n        let erro: String = \"\";\n\n        if (cpf.length === 11) {\n            var nonNumbers = /\\D/;\n            if (nonNumbers.test(cpf)) {\n                erro = \"A verificacao de CPF suporta apenas números!\";\n            }\n            else {\n                if (cpf == \"00000000000\" ||\n                    cpf == \"11111111111\" ||\n                    cpf == \"22222222222\" ||\n                    cpf == \"33333333333\" ||\n                    cpf == \"44444444444\" ||\n                    cpf == \"55555555555\" ||\n                    cpf == \"66666666666\" ||\n                    cpf == \"77777777777\" ||\n                    cpf == \"88888888888\" ||\n                    cpf == \"99999999999\") {\n                    erro = \"Número de CPF inválido!\"\n                }\n\n                let a = [];\n                let b: number = 0;\n                let c = 11;\n                let x: number = 0;\n                let y: number = 0;\n\n                for (let i = 0; i < 11; i++) {\n                    a[i] = cpf.charAt(i);\n                    if (i < 9) b += (a[i] * --c);\n                }\n\n                if ((x = b % 11) < 2) {\n                    a[9] = 0\n                } else {\n                    a[9] = 11 - x\n                }\n                b = 0;\n                c = 11;\n\n                for (y = 0; y < 10; y++) b += (a[y] * c--);\n\n                if ((x = b % 11) < 2) {\n                    a[10] = 0;\n                } else {\n                    a[10] = 11 - x;\n                }\n\n                if ((cpf.charAt(9) != a[9]) || (cpf.charAt(10) != a[10])) {\n                    erro = \"Número de CPF inválido.\";\n                }\n            }\n        } else {\n            if (cpf.length === 0)\n                return false\n            else\n                erro = \"Número de CPF inválido.\";\n        }\n\n        if (erro.length > 0) {\n            return false;\n        }\n        this.isCpfValid = true;\n        return true;\n    }\n\n\n    // validaCpf(): boolean {\n\n    //     let sForm = this.form;\n    //     let cpf = sForm.controls.itin.value;\n    //     this.isCpfValid = false;\n    //     this.showCpfValidation = true;\n\n    //     cpf = cpf.split('.').join('').split('-').join('');\n\n    //     if (cpf == null) {\n    //         return false;\n    //     }\n    //     if (cpf.length != 11) {\n    //         return false;\n    //     }\n    //     if ((cpf == '00000000000') || (cpf == '11111111111') || (cpf == '22222222222') || (cpf == '33333333333') || (cpf == '44444444444') || (cpf == '55555555555') || (cpf == '66666666666') || (cpf == '77777777777') || (cpf == '88888888888') || (cpf == '99999999999')) {\n    //         return false;\n    //     }\n    //     let numero: number = 0;\n    //     let caracter: string = '';\n    //     let numeros: string = '0123456789';\n    //     let j: number = 10;\n    //     let somatorio: number = 0;\n    //     let resto: number = 0;\n    //     let digito1: number = 0;\n    //     let digito2: number = 0;\n    //     let cpfAux: string = '';\n    //     cpfAux = cpf.substring(0, 9);\n    //     for (let i: number = 0; i < 9; i++) {\n    //         caracter = cpfAux.charAt(i);\n    //         if (numeros.search(caracter) == -1) {\n    //             return false;\n    //         }\n    //         numero = Number(caracter);\n    //         somatorio = somatorio + (numero * j);\n    //         j--;\n    //     }\n    //     resto = somatorio % 11;\n    //     digito1 = 11 - resto;\n    //     if (digito1 > 9) {\n    //         digito1 = 0;\n    //     }\n    //     j = 11;\n    //     somatorio = 0;\n    //     cpfAux = cpfAux + digito1;\n    //     for (let i: number = 0; i < 10; i++) {\n    //         caracter = cpfAux.charAt(i);\n    //         numero = Number(caracter);\n    //         somatorio = somatorio + (numero * j);\n    //         j--;\n    //     }\n    //     resto = somatorio % 11;\n    //     digito2 = 11 - resto;\n    //     if (digito2 > 9) {\n    //         digito2 = 0;\n    //     }\n    //     cpfAux = cpfAux + digito2;\n    //     if (cpf != cpfAux) {\n    //         return false;\n    //     } else {\n    //         this.isCpfValid = true;\n    //         return true;\n    //     }\n    // }\n\n    abrirTermoUsoApp() {\n\n        let alert = this.alertCtrl.create({\n            title: `Dado`,\n            message: 'TILL TECNOLOGIA EIRELI\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'+\nn            'São Paulo, 27 de abril denn            'TERMOS E CONDIÇÕES DE USO DO APLICATIVO TILL \"A Dado\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              '+\n            '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       '+\nn            '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       '+\n            'Estes Termos de uso (\"Termos\") regem seu acesso e uso, como pessoa física, de aplicativos, sítios de Internet, conteúdos, produtos e também serviços (os \"Serviçosn            'disponibilizados pela Dado TECNOLOGIA EIRELI, inscrita no Cadastro Nacional de Pessoas Jurídicas do Ministério da Fazenda (CNPJ/MF) sob n.31.801.778 /0001-23 ou qualquer de suas afiliadas, definidas ao longo deste termo, simplesmente como Dadonn            '2. LEIA COM ATENÇÃO ESTES TERMOS ANTES DE ACESSAR OU USAR OS SERVIÇOS DOS APLICATIVOS Dado.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          '+\n            '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       '+\nn            'Ao acessar e usar os Serviços você concorda com os presentes termos e condições, que estabelecem o relacionamento contratual entre você e a Dado. Se você não concorda com estes Termos, você não pode acessar nem usar os Serviçosnn            'Mediante a aceitação destes termos, fica acordado entre a Dado e o usuárion            'a substituição de qualquer termos e acertos acordados anteriormente entre o usuário e qualquer Afiliada da Dadonnn            'A Dado poderá imediatamente encerrar este acordo e quaisquer outros serviços de odo geral, deixar de oferecer ou negar acesso aos Serviços ou a qualquer parte deles,  qualquer momento e por qualquer motivo. Termos adicionais poderão se aplicar a eterminados Serviços, tais como condições para um evento,atividade ou promoção em articular e esses em relação aos respectivosServiços. Termos adicionais serão divulgadas em relação aos respectivos Serviços. Termos adicionais são omplementares e considerados parte integrante destes Termos para os efeitos dos respectivos Serviços. Termos adicionais prevalecerão sobre este, em caso de conflito om relação aos referidos Serviços. A Dado poderá alterar os Termos relativos aos erviços a qualquer momento. Aditamentos entrarão em vigor quando a Dado fizer a ostagem da versão atualizada dos Termos neste local ou das condições atualizadas ou Termos adicionais sobre o respectivo Serviço. O fato de você continuar a acessar u sar os Serviços após essa postagem representa seu consentimento em vincular-se os ermos alterados. A Dado ou qualquer de suas afiliadas poderá fornecer a uma erenciadora de reclamações ou seguradoras qualquer informação necessária (inclusive suas informações de contato) se houver qualquerreclamação, litígio ou onflito, o que pode incluir acidente envolvendo você ou prestadores terceiros (inclusive um(a) motorista de uma rede de empresas de transportes, e essas informações ou ados forem necessários para solucionar a reclamação, litígio ou conflito. 2. OS SERVIÇOS Os Serviços integram uma plataforma de tecnologia que permite aos(às) suários(as) de aplicativos móveis ou sítios de Internet da Dado , fornecidos como arte dos Serviços (cada qual um \"Aplicativo\"), providenciar e programar Serviços de transporte e/ou logística com terceiros provedores independentes desses Serviços, nclusive terceiros fornecedores independentes de transporte e terceiros fornecedores independentes de logística mediante contrato com a Dado ou determinadas Ampliadas da Dado (\"Prestadores Terceiros\"). A menos que diversamente acordado ela Dado em contrato escrito em separado firmado com você, os Serviços são disponibilizados para seu uso pessoal e não comercial. Você reconhece que a Dado ão presta serviços detransporte ou logística, nem funciona como transportadora, e que odos esses serviços de transporte ou logística são prestados por prestadores terceiros ndependentes, que não são empregados (as) e nem representantes da Dado, nem e qualquer de suas afinadas.      '+\nn            'LICENÇnn            'Sujeito ao cumprimento destes Termos, a Dado outorga uma licença limitada, não xclusiva, não passível de sub licença, revogável e não transferível para: (i) acesso e so os Aplicativos em seu dispositivo pessoal, exclusivamente para o seu uso dos erviços;  ii) acesso e uso de qualquer conteúdo, informação e material correlato que possa ser disponibilizado por meio dos serviços, em cada caso, para seu uso pessoal, nunca omercial. Quaisquer direitos não expressamente outorgados por estes termos são eservados à Dado e suas afinadasnnn            'RESTRIÇÕnn            'Você não poderá: (i) remover qualquer aviso de direito autoral, direito de marca ou utro viso de direito de propriedade de qualquer parte dos serviços; (ií) reproduzia modificar, distribuir, licenciar, locar, vender, revender transferir, exibir, veicular, transmitir ou, de ualquer outro modo, explorar os serviços, exceto da forma expressamente permitida ela Dado (iii) decompilar, realizar engenharia reversa ou desmontar os Serviços, exceto conforme permitido pela legislação aplicável; (lv) conectar, espelhar ou recortar ualquer parte dos Serviços; (v) fazer ou lançar quaisquer programas ou scripts com a finalidade de fazer scraping, indexação, pesquisa ou qualquer outra forma de obtenção e dados de qualquer parte dos serviços, ou de sobrecarregar ou prejudicar indevidamente a operação e a funcionalidade de qualquer aspecto dos serviços; ou vi) entar obter acesso não autorizado aos serviços ou prejudicar qualquer aspecto dos serviços ou seus sistemas ou redes correlatas.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             '+\nnn            'PRESTAÇÃO DOS SERVIÇnn            'Você reconhece que os Serviços podem ser disponibilizados sob diferentes marcas da uming, de diferentes seguimentos e setores, de diferentes opções de solicitação associadas aos serviços de transporte, de logística, de serviços domésticos, de uidados pessoais, de saúde, de cuidados com animais e outros serviços que a Dado ier a disponibilizar em sua plataforma posteriormente. Todos os serviços são restados or terceiros independentes, inclusive marcas de solicitação de transporte. Você reconhece também que os serviços podem estar disponíveis sob essas marcas e opções de solicitação oferecidas por, ou associadas a: (1) determinadas subsidiárias e finadas da Dado; ou (11) Prestadores Terceiros independentes, inclusive motoristas de empresas de rede de transporte, detentores(as) de permissão para serviços de ransporte na categoria profissional ou detentores(as) de permissões, autorizações ou licenças de transporte similaresn            '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ',\n            buttons: [\n                {\n                    text: 'Aceitar',\n                    handler: () => {\n\n                        this.TermoUsoAppAceitou = true;\n\n                    }\n                },\n                {\n                    text: 'Não Aceitar',\n                    role: 'cancel',\n                    handler: () => {\n\n                        this.exitPage();\n                    }\n                }\n            ]\n        });\n\n        alert.present();\n\n    }\n\n    exitPage() {\n        setTimeout(() => {\n            this.toast.create({ message: 'Saindo do Dado...', duration: 3000 }).present();\n            this.platform.exitApp();\n        }, 3000);\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts","import {HttpClient,HttpHeaders} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class CepProvider {\n\n  constructor(public http: HttpClient) {\n  }\n\n  cep(inputCep: string) {\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n    headers = headers.append('Access-Control-Allow-Origin', \"*\");\n    headers = headers.append('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\n    headers = headers.append('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization, application/json');\n    const options = { headers: headers }\n\n    let resultado: any;\n    let cepURL = 'https://viacep.com.br/ws/'+inputCep+'/json';\n    return new Promise((resolve, reject) => {\n      this.http.get(cepURL,options)\n          .subscribe(function(result){\n            resultado = result;\n            resolve(resultado);\n          })\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/cep/cep.ts","import { Injectable } from \"@angular/core\";\nimport { AngularFireDatabase } from \"@angular/fire/database\";\n\n@Injectable()\nexport class DriverService {\n\n  constructor(public db: AngularFireDatabase) {\n\n  }\n\n  // get driver by id\n  getDriver(id) {\n    return this.db.object('drivers/' + id);\n  }\n\n  // get driver position\n  getDriverPosition(locality, vehicleType, id) {\n    \n    return this.db.object('localities/' + locality + '/' + vehicleType.toUpperCase() + '/' + id);\n  }\n\n  getActiveDriver(locality, vehicleType) {\n\n    return  this.db.object('localities/' + locality + '/' + vehicleType.toUpperCase());\n  }\n\n  // calculate vehicle angle\n  calcAngle(oldLat, oldLng, lat, lng) {\n    let brng = Math.atan2(lat - oldLat, lng - oldLng);\n    brng = brng * (180 / Math.PI);\n\n    return brng;\n  }\n\n  // return icon suffix by angle\n  getIconWithAngle(vehicle) {\n    let angle = this.calcAngle(vehicle.oldLat, vehicle.oldLng, vehicle.lat, vehicle.lng);\n\n    if (angle >= -180 && angle <= -160) {\n      return '_left';\n    }\n\n    if (angle > -160 && angle <= -110) {\n      return '_bottom_left';\n    }\n\n    if (angle > -110 && angle <= -70) {\n      return '_bottom';\n    }\n\n    if (angle > -70 && angle <= -20) {\n      return '_bottom_right';\n    }\n\n    if (angle >= -20 && angle <= 20) {\n      return '_right';\n    }\n\n    if (angle > 20 && angle <= 70) {\n      return '_top_right';\n    }\n\n    if (angle > 70 && angle <= 110) {\n      return '_top';\n    }\n\n    if (angle > 110 && angle <= 160) {\n      return '_top_left';\n    }\n\n    if (angle > 160 && angle <= 180) {\n      return '_left';\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/driver-service.ts","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class PrizeService {\n\n    constructor(public http: HttpClient) {\n    }\n\n    async getPrizes(itin: string) {\n\n        let itin_nbn = itin.replace(/[./-]/g, '');\n\n        let resultado: any;\n        let dadoURL = 'http://bumingapi.bumingapp.com.br/public/api/v1/awards/?itin='+itin_nbn;\n        // let dadoURL = 'http://bumingapi.test/api/v1/awards/?itin=' + itin_nbn;\n        return await new Promise((resolve, reject) => {\n            this.http.get(dadoURL)\n                .subscribe(function (result) {\n                    resultado = result;\n                    resolve(resultado);\n                }, () => {\n                    reject('0');\n                })\n        });\n\n    }\n\n    getNetworkPrizes(){\n        let resultado: any;\n        let dadoURL = 'http://bumingapi.bumingapp.com.br/public/api/v1/netprizes/';\n        // let dadoURL = 'http://bumingapi.test/api/v1/netprizes/';\n        return new Promise((resolve, reject) => {\n            this.http.get(dadoURL)\n                .subscribe(function (result) {\n                    resultado = result;\n                    resolve(resultado);\n                }, () => {\n                    reject('0');\n                })\n        });\n    }\n\n    async getCashbackPrizes(itin: string){\n        let itin_nbn = itin.replace(/[./-]/g, '');\n\n        let resultado: any;\n        let dadoURL = 'http://bumingapi.bumingapp.com.br/public/api/v1/cashback/?itin=' + itin_nbn;\n        // let dadoURL = 'http://bumingapi.test/api/v1/cashback/?itin=' + itin_nbn;\n        return await new Promise((resolve, reject) => {\n            this.http.get(dadoURL)\n                .subscribe(function (result) {\n                    resultado = result;\n                    resolve(resultado);\n                }, () => {\n                    reject('0');\n                })\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/prize-service.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ViewController } from 'ionic-angular';\n\n/**\n * Generated class for the SplashPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-splash',\n  templateUrl: 'splash.html',\n})\nexport class SplashPage {\n\n  constructor(public navCtrl: NavController, \n              public navParams: NavParams,\n              public viewController: ViewController) {\n  }\n\n  ionViewDidEnter() {\n\n    setTimeout(() => {\n      this.viewController.dismiss();\n    }, 3000);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/splash/splash.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 225;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/fesm5 lazy\n// module id = 225\n// module chunks = 3","var map = {\n\t\"../pages/indicacao/indicacao.module\": [\n\t\t934,\n\t\t2\n\t],\n\t\"../pages/payments/payments.module\": [\n\t\t935,\n\t\t1\n\t],\n\t\"../pages/splash/splash.module\": [\n\t\t936,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 269;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 269\n// module chunks = 3","import {Injectable} from \"@angular/core\";\nimport {AngularFireDatabase} from '@angular/fire/database';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {Storage} from '@ionic/storage';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/take'\nimport {EMAIL_VERIFICATION_ENABLED} from \"./constants\";\n\n@Injectable()\nexport class AuthService {\n    user: any;\n\n    constructor(public afAuth: AngularFireAuth, public db: AngularFireDatabase, public storage: Storage) {\n    }\n\n    // get current user data from firebase\n    getUserData() {\n        console.log(\"this.afAuth.auth.currentUser=============\", this.afAuth.auth.currentUser);\n        return this.afAuth.auth.currentUser;\n    }\n\n    // get passenger by id\n    getUser(id) {\n        return this.db.object('persons/' + id);\n    }\n\n    // login by email and password\n    login(email, password) {\n        //this.logout() ;\n        let result = this.afAuth.auth.signInWithEmailAndPassword(email, password);\n        return result;\n    }\n\n\n    logout() {\n        return this.afAuth.auth.signOut();\n    }\n\n    // register new account\n    register(user: any) {\n        return Observable.create(observer => {\n\n            this.afAuth.auth.createUserWithEmailAndPassword(user.email, user.password).then((authData: any) => {\n                authData.name           = user.name;\n                authData.itin           = user.itin;\n                authData.id_card        = '';\n                authData.phoneNumber    = user.phoneNumber;\n                authData.birthdate      = user.birthdate;\n                authData.gender         = '';\n                authData.zipcode        = '';\n                authData.address        = '';\n                authData.number         = '';\n                authData.complement     = '';\n                authData.neighborhood   = '';\n                authData.city           = '';\n                authData.state          = '';\n                authData.photoUrl       = user.photo;\n                authData.indicadoPor    = user.indicadoPor;\n                authData.minhaIndicacao = user.minhaIndicacao;\n                authData.bank           = '';\n                authData.agency         = '';\n                authData.account        = '';\n                authData.data_cadastro  = user.data_cadastro;\n                //authData.id_card = user.id_card;\n                //authData.gender = user.gender;        \n                //authData.zipcode = user.zipcode;\n                //authData.address = user.address;\n                //authData.number = user.number;\n                //authData.complement = user.complement ? user.complement : ' - ';\n                //authData.neighborhood = user.neighborhood;\n                //authData.city = user.city;\n                //authData.state = user.state;\n               \n                authData.isPhoneVerified = false;\n                authData.isEmailVerified = false;\n                if (EMAIL_VERIFICATION_ENABLED === true)\n                    this.getUserData().sendEmailVerification();\n                // update passenger object\n                //this.updateUserProfile(authData);\n                observer.next();\n            }).catch((error: any) => {\n                observer.next();\n                // if (error) {\n                //     observer.error(error);\n                // }\n            });\n        });\n    }\n\n    // update user from Db Mysql\n    updateUserProfileFromDb(user, afiliado) {\n        console.log(user, afiliado);\n\n        // create or update passenger\n        this.db.object('persons/' + user.uid).update({\n            id: afiliado.id,\n            displayName: afiliado.primeiro_nome,\n            name: afiliado.primeiro_nome + \" \" + afiliado.segundo_nome,\n            itin: afiliado.cpf,\n            email: afiliado.email,\n            pswd: afiliado.pswd,\n            id_card: afiliado.rg,\n            birthdate: afiliado.data_nascimento,\n            phoneNumber: afiliado.telefone,\n            gender: afiliado.sexo,\n            zipcode: afiliado.cep,\n            address: afiliado.endereco,\n            //number: \"\",\n            //complement: \"\",\n            //neighborhood: \"\",\n            city: afiliado.cidade, \n            state: afiliado.estado,\n            //photoUrl: (afiliado.foto!=null) ? afiliado.foto: user.photoUrl,\n            //photoCNH: (afiliado.foto_rg_cnh!=null) ? afiliado.foto_rg_cnh: user.photoCNH ,\n            //photoComprovante: (afiliado.foto_comprovante!=null) ? afiliado.foto_comprovante: user.photoComprovante,\n            indicadoPor: afiliado.indicadoPor,\n            minhaIndicacao: afiliado.codigo_afiliacao,\n            bank: afiliado.banco_codigo,\n            agency: afiliado.banco_agencia,\n            account: afiliado.banco_conta,\n            //providerId:\"\",\n            isPhoneVerified: true,\n            isEmailVerified: true,\n            data_cadastro: afiliado.data_criacao\n        })\n    }\n\n    // update user display name and photo\n    updateUserProfile(user) {\n        console.log(user);\n        let name = user.name ? user.name : user.email;\n        let photoUrl = user.photoUrl ? user.photoUrl : '';\n        let photoCNH = user.photoCNH ? user.photoCNH : '';\n        let photoComprovante = user.photoComprovante ? user.photoComprovante : '';\n        \n        // this.getUserData().updateProfile({\n        //     displayName: name,\n        //     photoURL: ''\n        // });\n\n        // create or update passenger\n        this.db.object('persons/' + user.uid).update({\n            name: name,\n            itin: user.itin,\n            id_card: user.id_card,\n            birthdate: user.birthdate,\n            phoneNumber: user.phoneNumber,\n            gender: user.gender,\n            zipcode: user.zipcode,\n            address: user.address,\n            number: user.number,\n            complement: user.complement,\n            neighborhood: user.neighborhood,\n            city: user.city,\n            state: user.state,\n            photoUrl: photoUrl,\n            photoCNH: photoCNH,\n            photoComprovante: photoComprovante,\n            indicadoPor: user.indicadoPor,\n            minhaIndicacao: user.minhaIndicacao,\n            bank: user.bank ? user.bank : '',\n            agency: user.agency ? user.agency : '',\n            account: user.account ? user.account : '',\n            isPhoneVerified: false,\n            isEmailVerified: false,\n            data_cadastro: user.data_cadastro ? user.data_cadastro : ''\n        })\n    }\n\n    // create new user if not exist\n    createUserIfNotExist(user) {\n        // check if user does not exist\n        this.getUser(user.uid).valueChanges().subscribe((snapshot:any) => {\n            if (snapshot.$value === null) {\n                // update passenger object\n                this.updateUserProfile(user);\n            }\n        });\n    }\n\n    // update card setting\n    updateCardSetting(number, exp, cvv, token) {\n        const user = this.getUserData();\n        this.db.object('persons/' + user.uid + '/card').update({\n            number: number,\n            exp: exp,\n            cvv: cvv,\n            token: token\n        })\n    }\n\n    // get card setting\n    getCardSetting() {\n        const user = this.getUserData();\n        return this.db.object('persons/' + user.uid + '/card').valueChanges();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/auth-service.ts","import { Component } from '@angular/core';\nimport { NavController, LoadingController } from 'ionic-angular';\nimport { AuthService } from \"../../services/auth-service\";\nimport { TripService } from \"../../services/trip-service\";\nimport {UserPage} from \"../user/user\";\n\n\n@Component({\n  selector: 'page-payment-method',\n  templateUrl: 'payment-method.html'\n})\nexport class PaymentMethodPage {\n  carNumber: any = null;\n\n  constructor(public nav: NavController, public authService: AuthService, public tripService: TripService,\n              public loadingCtrl: LoadingController) {\n    const loading = loadingCtrl.create({\n      content: 'Please wait...'\n    });\n    loading.present();\n\n    authService.getCardSetting().subscribe( (snapshot:any) => {\n      loading.dismiss();\n      if (snapshot) {\n        this.carNumber = snapshot.number;\n      }\n    });\n  }\n\n  // apply change method\n  changeMethod(method) {\n    this.tripService.setPaymentMethod(method);\n    // go back\n    this.nav.pop();\n  }\n\n  // add card\n  addCard() {\n     this.nav.push(UserPage, {back: true});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/payment-method/payment-method.ts","import {Injectable} from '@angular/core';\nimport {AngularFireDatabase} from '@angular/fire/database';\nimport {AngularFireAuth} from '@angular/fire/auth';\n\n@Injectable()\nexport class BankService {\n\n    constructor(public afAuth: AngularFireAuth, public db: AngularFireDatabase) {\n    }\n\n    getBanks(){\n        \n        return this.db.object('/bancos/').valueChanges();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/bank-service.ts","import { Component } from '@angular/core';\nimport { NavController, Platform, ModalController, AlertController, NavParams } from 'ionic-angular';\nimport { DriverService } from '../../services/driver-service';\nimport { HomePage } from \"../home/home\";\nimport { TripService } from \"../../services/trip-service\";\nimport {\n    POSITION_INTERVAL,\n    TRIP_STATUS_GOING,\n    SOS,\n    TRIP_STATUS_WAITING,\n    TRIP_STATUS_PAID,\n    TRIP_STATUS_FINISHED,\n    TRIP_STATUS_NOTIFIED,\n    TRIP_STATUS_CANCELED\n} from \"../../services/constants\";\nimport { PlaceService } from \"../../services/place-service\";\nimport { PaymentGatewayComponent } from \"../../components/payment-gateway/payment-gateway\";\nimport { AngularFireDatabase } from \"@angular/fire/database\";\nimport { AuthService } from \"../../services/auth-service\";\nimport 'rxjs/add/operator/take';\n\n// Firebase App (the core Firebase SDK) is always required and must be listed first\n//import * as firebase from \"firebase/app\";\nimport firebase from \"firebase/app\";\n\n\ndeclare var google: any;\n\n@Component({\n    selector: 'page-tracking',\n    templateUrl: 'tracking.html',\n    providers: [\n        PaymentGatewayComponent\n    ]\n})\nexport class TrackingPage {\n    public driver: any;\n    public map: any;\n    public trip: any = {};\n    public trackingDriverTracking: any;\n    public marker: any;\n\n    public tripStatus: string;\n    public distance: any;\n    public duration: any;\n    public sos: any;\n    public alertCnt: any = 0;\n\n    public driver_name: any;\n    public driver_photo: any;\n    public alertShown: boolean = false;\n    public mapId = Math.random() + 'map';\n    public distanceText: any = '';\n    public durationText: any = '';\n    public rotation:any = 0;\n\n    constructor(public nav: NavController, public driverService: DriverService, public platform: Platform,\n        public navParams: NavParams, public tripService: TripService, public placeService: PlaceService,\n        public modalCtrl: ModalController, public alertCtrl: AlertController,\n        public db: AngularFireDatabase,public authService: AuthService) {\n\n\n        this.platform.ready()\n            .then(() => {\n\n                this.platform.registerBackButtonAction(() => {\n                    if (this.alertShown == false) {\n                        this.presentConfirm();\n                    }\n                }, 0)\n\n                this.sos = SOS;\n                localStorage.setItem('isPassengerNotified', \"false\");\n                localStorage.setItem('isFinished', \"false\");\n\n                let tripId;\n                if (this.navParams.get('tripId'))\n                    tripId = this.navParams.get('tripId');\n                else\n                    tripId = this.tripService.getId();\n\n                this.tripService.getTrip(tripId).valueChanges().subscribe((snapshot: any) => {\n                    this.trip = snapshot;\n                    this.trip.key = tripId;\n                    this.trip.id = tripId;\n                    this.tripStatus = snapshot.status;\n\n                    this.driverService.getDriver(this.trip.driverId).valueChanges().subscribe(snap => {\n                        this.driver = snap;\n\n                        this.loadMap();\n                    })\n\n                    this.authService.getUser(this.trip.driverId).valueChanges().subscribe((snap_driver: any) => {\n                        let driver_infos = snap_driver;\n                        this.driver_name = driver_infos.name;\n                        this.driver_photo = driver_infos.photoUrl;\n                    });\n                });\n\n            });\n\n    }\n\n    presentConfirm() {\n        let alert = this.alertCtrl.create({\n            title: 'Confirmação',\n            message: 'Deseja realmente sair do Dado Passageiro?',\n            buttons: [\n                {\n                    text: 'Não',\n                    role: 'cancel',\n                    handler: () => {\n                        console.log('Cancel clicked');\n                        this.alertShown = false;\n                    }\n                },\n                {\n                    text: 'Sim',\n                    handler: () => {\n                        console.log('Yes clicked');\n                        this.platform.exitApp();\n                    }\n                }\n            ]\n        });\n        alert.present().then(() => {\n            this.alertShown = true;\n        });\n    }\n\n\n    ngOnInit() {\n    }\n\n    ionViewWillEnter() {\n    }\n\n    ionViewWillLeave() {\n    }\n\n\n\n    showNotification() {\n\n        let message = \"Dados do seu motorista: <br/>\" +\n            \"Nome: \" + this.driver_name + \"<br/>\" +\n            \"Veículo: \" + this.driver.brand + \"/\" + this.driver.model + \"<br/>\" +\n            \"Cor: \" + this.driver.color + \"<br/>\" +\n            \"Placa: \" + this.driver.plate;\n\n        let confirm = this.alertCtrl.create({\n            title: 'Seu Motorista Chegou!',\n            message: message,\n            cssClass: \"alertcss\",\n            buttons: [\n                {\n                    text: 'OK',\n                    cssClass: 'okcss',\n                    handler: () => { }\n                }\n            ]\n        });\n\n        confirm.present();\n\n        return;\n\n    }\n\n    finishTrip() {\n        let tripId = this.tripService.getId();\n        //this.nav.push(PaymentsPage, {'tripId': tripId, 'fee': this.trip.fee});\n\n        this.db.object('trips/' + tripId).update({\n            status: 'paid',\n            paypalId: tripId,\n            payment_date: new Date()\n        });\n\n        //Stripe Code\n        /* if (this.tripService.getPaymentMethod() == 'card'){\n             let final = this.trip.fee - (this.trip.fee * (parseInt(this.trip.discount) / 100));\n             const paymentRequest = stripe.paymentRequest({\n                 country: 'BR',\n                 currency: 'brl',\n                 total: {\n                     label: 'Corrida na Dado #'+tripId,\n                     amount: final,\n                 },\n                 requestPayerName: true,\n                 requestPayerEmail: true,\n             });\n \n             const elements = stripe.elements();\n             const prButton = elements.create('paymentRequestButton', {\n                 paymentRequest,\n             });\n \n             (async () => {\n                 // Check the availability of the Payment Request API first.\n                 const result = await paymentRequest.canMakePayment();\n                 if (result) {\n                     prButton.mount('#payment-request-button');\n                 } else {\n                     document.getElementById('payment-request-button').style.display = 'none';\n                 }\n             })();\n \n             paymentRequest.on('token', async (ev) => {\n                 // Send the token to your server to charge it!\n                 const response = await fetch('/charges', {\n                     method: 'POST',\n                     body: JSON.stringify({token: ev.token.id}),\n                     headers: {'content-type': 'application/json'},\n                 });\n \n                 if (response.ok) {\n                     // Report to the browser that the payment was successful, prompting\n                     // it to close the browser payment interface.\n                     ev.complete('success');\n                 } else {\n                     // Report to the browser that the payment failed, prompting it to\n                     // re-show the payment interface, or show an error message and close\n                     // the payment interface.\n                     ev.complete('fail');\n                 }\n             });\n         }*/\n\n        this.showRateCard();\n    }\n\n    showRateCard() {\n        let final = this.trip.fee - (this.trip.fee * (parseInt(this.trip.discount) / 100));\n        let message = '<p>Valor: ' + this.trip.fee +\n            '<br>Promo: ' + this.trip.promocode +\n            '<br> Desconto (%): ' + this.trip.discount +\n            '<br/>Método de  pagamento: ' + (this.trip.paymentMethod == 'cash' ? 'Dinheiro' : 'Cartão') +\n            '</p><h2>' + this.trip.currency + ' ' + final + '</h2>' +\n            '<h2>Obrigado por usar a Dado!</h2>';\n        this.alertCtrl.create({\n            title: 'Corrida Finalizada!',\n            message: message,\n            enableBackdropDismiss: false,\n            buttons: [{\n                text: 'Avaliar a corrida',\n                handler: data => {\n                    this.showRatingAlert();\n                }\n            }],\n        }).present();\n    }\n\n    showRatingAlert() {\n        console.log(this.trip, this.driver);\n        let alert = this.alertCtrl.create({\n            title: 'Avaliar a corrida',\n            enableBackdropDismiss: false\n        });\n        alert.addInput({ type: 'radio', label: 'Excelente', value: '5', checked: true });\n        alert.addInput({ type: 'radio', label: 'Boa', value: '4' });\n        alert.addInput({ type: 'radio', label: 'Normal', value: '3' });\n        alert.addInput({ type: 'radio', label: 'Ruim', value: '2' });\n        alert.addInput({ type: 'radio', label: 'Péssima', value: '1' });\n\n        alert.addButton({\n            text: 'Cancelar', handler: () => {\n                this.nav.setRoot(HomePage)\n            }\n        });\n        alert.addButton({\n            text: 'OK',\n            handler: data => {\n                this.tripService.rateTrip(this.trip.key, data).then(() => {\n                    this.nav.setRoot(HomePage)\n                });\n            }\n        });\n        alert.present();\n\n    }\n\n\n    trackDriver() {\n\n        if (localStorage.getItem('interval_trackingDriverTracking') != null) {\n            clearInterval(+localStorage.getItem('interval_trackingDriverTracking'));\n        }\n        let trackingDriverTracking = setInterval(() => {\n\n            this.showDriverOnMap();\n\n        }, POSITION_INTERVAL);\n        localStorage.setItem('interval_trackingDriverTracking', trackingDriverTracking.toString());\n\n    }\n\n    cancelTrip() {\n        this.tripService.cancelTrip(this.trip.key).then(data => {\n            console.log(data);\n\n            clearInterval(+localStorage.getItem('interval_trackingDriverTracking'));\n            this.nav.setRoot(HomePage);\n        })\n    }\n\n    // show user on map\n    showDriverOnMap() {\n\n        firebase.database()\n            .ref('driversOnline/' + this.driver.uid)\n            .orderByKey()\n            .once('value')\n            .then((snapshot: any) => {\n\n                let vehicle = { key: snapshot.key, ...snapshot.val() };\n                console.log(\"tracking - showDriverOnMap--->\", vehicle);\n\n                if (vehicle != null) {\n\n                    // create or update\n                    let latLng = new google.maps.LatLng(vehicle.lat, vehicle.lng);\n\n                    if (this.marker != null) { \n                        this.marker.setMap(null); \n                    }\n                    //this.map.setCenter(latLng);\n\n                    let catIcon = {\n                        url: 'assets/img/map-suv.png',\n                        //state your size parameters in terms of pixels\n                        size: new google.maps.Size(32,32),\n                        scaledSize: new google.maps.Size(32, 32),\n                        origin: new google.maps.Point(0,0),\n                        anchor: new google.maps.Point(12,-290),\n                        strokeWeight: 0,\n                        scale: .25,\n                        rotation: this.rotation\n                    }\n\n                    if (this.rotation>=300) {\n                        this.rotation = 0;\n                    }\n                    else {\n                        this.rotation += 150;\n                    }\n                    \n\n                    ////\n                    // {\n                    //     url:  'assets/img/map-suv.png',\n                    //     size: new google.maps.Size(32, 32),\n                    //     origin: new google.maps.Point(0, 0),\n                    //     anchor: new google.maps.Point(16, 16),\n                    //     scaledSize: new google.maps.Size(32, 32)\n                    // }\n\n                    // show vehicle to map\n                    this.marker = new google.maps.Marker({\n                        map: this.map,\n                        position: latLng,\n                        optimized: false,\n                        icon: catIcon\n                    });\n\n                    let myoverlay = new google.maps.OverlayView();\n                            myoverlay.draw = function () {\n                                            this.getPanes().markerLayer.id='markerLayer';\n                                                };\n                    myoverlay.setMap(this.map);\n\n                    this.marker.setMap(this.map);\n\n\n\n                    console.log('tracking - showDriverOnMap - TripStatus>', this.tripStatus);\n\n\n\n                    if (this.tripStatus == TRIP_STATUS_GOING) {\n                        //\n                        //\n                    }\n                    else if (this.tripStatus == TRIP_STATUS_WAITING) {\n                        let origin = this.tripService.getOrigin();\n                        this.placeService.getDirection(vehicle.lat, vehicle.lng, origin.lat, origin.lng)\n                            .subscribe((result:any) => {\n                                if (result.routes.length != 0) {\n                                    this.distance = result.routes[0].legs[0].distance.text;\n                                    this.duration = (result.routes[0].legs[0].duration.text);\n                                }\n                            });\n                    }\n                    else if (this.tripStatus === TRIP_STATUS_NOTIFIED) {\n                        if (localStorage.getItem('isPassengerNotified') == \"false\") {\n\n                            localStorage.setItem('isPassengerNotified', \"true\");\n\n                            this.showNotification();\n                        }\n                    }\n                    else if ((this.tripStatus === TRIP_STATUS_FINISHED) ||\n                        (this.tripStatus === TRIP_STATUS_PAID)) {\n\n                            if (localStorage.getItem('isFinished').toString() != \"true\") {\n                                localStorage.setItem('isFinished', \"true\");\n                                clearInterval(+localStorage.getItem('interval_trackingDriverTracking'));\n                                this.finishTrip();\n        \n                            }\n                      \n                    }\n                    else if (this.tripStatus === TRIP_STATUS_CANCELED) {\n\n                        clearInterval(+localStorage.getItem('interval_trackingDriverTracking'));\n                        this.nav.setRoot(HomePage);\n                       \n                    }\n\n                }\n\n\n            });\n    }\n\n    loadMap() {\n\n\n        let origin_latLng = new google.maps.LatLng(this.trip.origin.location.lat, this.trip.origin.location.lng);\n        let destination_latLng = new google.maps.LatLng(this.trip.destination.location.lat, this.trip.destination.location.lng);\n\n        let directionsDisplay;\n        let directionsService = new google.maps.DirectionsService();\n        directionsDisplay = new google.maps.DirectionsRenderer();\n\n        this.map = new google.maps.Map(document.getElementById(this.mapId), {\n            zoom: 15,\n            center: origin_latLng,\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\n            mapTypeControl: false,\n            zoomControl: true,\n            disableDefaultUI: false,\n            streetViewControl: false,\n            styles: this.placeService.temaWY()\n        });\n\n        let mapx = this.map;\n        directionsDisplay.setMap(mapx);\n\n        this.placeService.getDirection(\n            this.trip.origin.location.lat,\n            this.trip.origin.location.lng, \n            this.trip.destination.location.lat,\n            this.trip.destination.location.lng).subscribe((result:any) => {\n\n            this.distance = result.routes[0].legs[0].distance.value;\n            this.duration = result.routes[0].legs[0].duration.value;\n\n            this.distanceText = result.routes[0].legs[0].distance.text;\n            this.durationText = result.routes[0].legs[0].duration.text;\n           \n        });\n\n\n        var bounds = new google.maps.LatLngBounds();\n        bounds.extend(origin_latLng);\n        bounds.extend(destination_latLng);\n\n        mapx.fitBounds(bounds);\n        var request = {\n            origin: origin_latLng,\n            destination: destination_latLng,\n            travelMode: google.maps.TravelMode.DRIVING\n        };\n        directionsService.route(request, function (response, status) {\n            if (status == google.maps.DirectionsStatus.OK) {\n                //// console.log(response);\n                directionsDisplay.setDirections(response);\n                directionsDisplay.setMap(mapx);\n            } else {\n                // console.log(\"error\");\n            }\n        });\n\n\n        this.trackDriver();\n    }\n\n    // make array with range is n\n    range(n) {\n        return new Array(Math.round(n));\n    }\n\n    \n          \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tracking/tracking.ts","import {Component} from '@angular/core';\nimport {AngularFireDatabase} from \"@angular/fire/database\";\nimport {AlertController, App} from \"ionic-angular\";\n\n/**\n * Generated class for the PaymentGatewayComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n@Component({\n    selector: 'payment-gateway',\n    templateUrl: 'payment-gateway.html'\n})\nexport class PaymentGatewayComponent {\n\n    constructor(public db: AngularFireDatabase,\n                public alertCtrl: AlertController, public app: App) {\n    }\n\n    async makePayment(tripId: any, fee) {\n        tripId = 0;\n        fee=0;\n        //const PRODUCTION_CLIENT_ID = '';\n        //const SANDBOX_CLIENT_ID = 'Adir4laMT-WmIFU4U7nuHQaHEypcK7ydual-IkmVCisDd9xXHLRfue8qT29bTSdO5rbqo4fQF8kHqokM';\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/payment-gateway/payment-gateway.ts","import { Injectable } from \"@angular/core\";\nimport { AngularFireDatabase } from \"@angular/fire/database/database\";\nimport { DEAL_STATUS_PENDING } from \"./constants\";\nimport { AuthService } from \"./auth-service\";\n\n\n@Injectable()\nexport class DealService {\n  constructor(public db: AngularFireDatabase, public authService: AuthService) {\n  }\n\n  // sort driver by rating & distance\n  sortDriversList(drivers: Array<any>) {\n    return drivers.sort((a, b) => {\n      return (a.rating - a.distance / 5) - (b.rating - b.distance / 5);\n    })\n  }\n\n  // make deal to driver\n  makeDeal(driverId, origin, destination, distance, fee, currency, note, paymentMethod, promocode, discount) {\n    let user = this.authService.getUserData();\n    return this.db.object('deals/' + driverId).set({\n      passengerId: user.uid,\n      currency: currency,\n      origin: origin,\n      destination: destination,\n      distance: distance,\n      fee: fee,\n      note: note,\n      paymentMethod: paymentMethod,\n      status: DEAL_STATUS_PENDING,\n      createdAt: Date.now(),\n      promocode: promocode,\n      discount: discount\n    });\n\n  }\n\n  // get deal by driverId\n  getDriverDeal(driverId) {\n   return this.db.object('deals/' + driverId);\n  }\n\n  // remove deal\n  removeDeal(driverId) {\n    return this.db.object('deals/' + driverId).remove();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/deal-service.ts","import { Injectable } from \"@angular/core\";\nimport { AngularFireDatabase } from '@angular/fire/database';\n\n@Injectable()\nexport class SettingService {\n\n  constructor(public db: AngularFireDatabase) {}\n\n  getPrices() {\n    return this.db.object('master_settings/prices');\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/setting-service.ts","import {Component, ViewChild, OnInit} from '@angular/core';\nimport {Platform, AlertController, IonicPage, LoadingController, NavController, NavParams, ToastController} from 'ionic-angular';\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {AngularFireDatabase} from \"@angular/fire/database\";\nimport {RegisterPage} from \"../register/register\";\nimport {LoginPage} from \"../login/login\";\nimport {CadastroDadoProvider} from \"../../providers/cadastro-dado/cadastro-dado\";\n\n@IonicPage()\n@Component({\n    selector: 'page-indicacao',\n    templateUrl: 'indicacao.html',\n})\nexport class IndicacaoPage implements OnInit{\n    @ViewChild('input') input: any;\n\n    indicacao: string = '';\n    indicadoPor: any;\n    mostraIndicacao: boolean;\n    minhaIndicacao: string = '';\n    validacaoOK: boolean;\n    indicacaoOk: boolean = false;\n\n    constructor(public navCtrl: NavController, public navParams: NavParams, public loadingCtrl: LoadingController,\n                public afAuth: AngularFireAuth, public db: AngularFireDatabase,  \n                public toast: ToastController, public alertCtrl: AlertController,\n                public platform:Platform, public dado: CadastroDadoProvider) {\n\n                    this.indicadoPor = this.navParams.get('indicadoPor');\n    }\n\n    ionViewDidEnter() {\n        // setTimeout(() => {\n        //     console.log(\"passou aqui===================\");\n        //     this.input.setFocus();\n        //     },150);\n    } \n\n    invalidarIndicacao() {\n        this.indicacao = '';\n        this.mostraIndicacao = false;\n        this.validacaoOK = false;\n    }\n\n    criarCodigo() {\n        this.mostraIndicacao = true;\n        this.indicacaoOk = true;\n    }\n\n    ngOnInit() {\n\n        this.platform.ready()\n        .then(() => {\n\n        });\n    }\n\n\n  criarIndicacao() {\n        let loading = this.loadingCtrl.create({content: 'Verificando...'});\n        loading.present();\n\n        this.dado.verifyAffiliateCode(this.minhaIndicacao)\n            .then( result => {\n                if (result[0].qtd == '1'){\n                    let alert = this.alertCtrl.create({\n                        title: 'Código Existente!',\n                        cssClass: 'alertcss',\n                        message: 'Esse código já está cadastrado. Se este código é seu, confirme digitando seu cpf:',\n                        inputs: [\n                            {\n                                name: 'cpf',\n                                type: 'text',\n                                placeholder: 'CPF'\n                            }],\n                        buttons: [{\n                            text: 'OK',\n                            cssClass: 'okcss',\n                            handler: data => {\n                                let cpf = data.cpf.toString().replace(/[\\. ,:-]+/g, \"\");\n\n                                console.log('clean',cpf);\n                                console.log('banco', result[0].cpf);\n                                if (cpf == result[0].cpf){\n                                    this.validacaoOK = true;\n                                    this.toast.create({ message: 'Pessoa já cadastrada!, por favor entre com EMAIL e SENHA...', duration: 5000 }).present();\n                                    this.navCtrl.setRoot(LoginPage, {'email':  result[0].email });\n                                }\n                                \n                                else{\n                                    this.invalidarIndicacao();\n                                    this.toast.create({ message: 'Escolha um Código Pessoal de Indicação ainda não usado!', duration: 3000 }).present();\n                                    this.navCtrl.setRoot(IndicacaoPage, {'minhaIndicacao': '', 'indicadoPor': this.indicadoPor})\n                                }\n                            }\n                        }]\n                    });\n                    alert.present();\n                    this.validacaoOK = false;\n                }\n                else{\n                    this.validacaoOK = true;\n                    this.navCtrl.setRoot(RegisterPage, {'minhaIndicacao': this.minhaIndicacao, 'indicadoPor': this.indicadoPor, 'origin':'new'})\n                }\n            });\n\n        /*this.validaAfiliacao().valueChanges().subscribe((snapshot:any) => {\n            console.log('snapshot2', snapshot);\n            if (snapshot.length <= 0) {\n\n\n            } else {\n\n            }\n\n\n        });*/\n        loading.dismiss();\n    }\n\n  \n    validar() {\n\n        if (!this.indicacao) {\n\n            let alert = this.alertCtrl.create({\n                title: 'Código em branco!',\n                cssClass: 'alertcss',\n                message: 'Digite um código antes de clicar em validar',\n                buttons: [{\n                    text: 'OK',\n                    cssClass: 'okcss'\n                }]\n            });\n            alert.present();\n\n        } else {\n\n            let loading = this.loadingCtrl.create({content: 'Procurando...'});\n            loading.present();\n            this.mostraIndicacao = false;\n            this.dado.searchAffiliateByCode(this.indicacao)\n                .then(result => {\n                    let indicadoPor = result;\n\n                    if (typeof indicadoPor !== undefined){\n                        this.mostraIndicacao = true;\n                    }\n                    this.indicadoPor = indicadoPor[0];\n                }).catch(reject => {\n                let alert = this.alertCtrl.create({\n                    title: 'Não encontrado!',\n                    subTitle: 'Verifique se digitou corretamente o código de indicação',\n                    buttons: ['OK']\n                });\n                alert.present();\n                \n            });\n            loading.dismiss();\n        }\n\n    }\n\n    validaAfiliacao() {\n        return this.db.list('pessoas',  ref => ref.orderByChild('codigo_afiliacao').equalTo(this.minhaIndicacao)).valueChanges();\n        \n        // {\n        //     query: {\n        //         orderByChild: 'codigo_afiliacao',\n        //         equalTo: this.minhaIndicacao,\n        //     }\n        // });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/indicacao/indicacao.ts","import {Component} from '@angular/core';\nimport {NavController, NavParams} from 'ionic-angular';\nimport {AuthService} from \"../../services/auth-service\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {PremiosPage} from \"../premios/premios\";\nimport {CashbackPage} from \"../cashback/cashback\";\n\n@Component({\n  selector: 'page-ganhos',\n  templateUrl: 'ganhos.html',\n})\nexport class GanhosPage {\n\n  user: any;\n  me: any;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n              public authService: AuthService, public afAuth: AngularFireAuth) {\n\n    afAuth.authState.subscribe(authData => {\n      if (authData) {\n        this.user = authService.getUserData();\n\n        authService.getUser(this.user.uid).valueChanges().subscribe((snapshot:any) => {\n          snapshot.uid = snapshot.$key;\n          this.me = snapshot;\n        });\n      }\n    });\n  }\n\n  goFirst(){\n    this.navCtrl.push(PremiosPage);\n  }\n\n  goSecond(){\n    this.navCtrl.push(CashbackPage);\n  }\n\n  ionViewDidLoad() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ganhos/ganhos.ts","import {Component} from '@angular/core';\nimport {NavController, NavParams} from 'ionic-angular';\nimport {AuthService} from \"../../services/auth-service\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {PrizeService} from \"../../services/prize-service\";\nimport 'rxjs/add/operator/take';\n\n@Component({\n  selector: 'page-premios',\n  templateUrl: 'premios.html',\n})\nexport class PremiosPage {\n\n  prizes: any;\n  user: any;\n  me: any;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n              public authService: AuthService, public afAuth: AngularFireAuth,\n              private prizeService: PrizeService) {\n\n    afAuth.authState.subscribe(authData => {\n      if (authData) {\n        this.user = authService.getUserData();\n\n        authService.getUser(this.user.uid).valueChanges().subscribe( (snapshot:any) => {\n          snapshot.uid = snapshot.$key;\n          this.me = snapshot;\n\n          this.getPrizes(this.me.itin);\n\n        });\n      }\n    });\n  }\n\n  ionViewDidLoad() {\n\n  }\n\n  getPrizes(itin) {\n    this.prizeService.getPrizes(itin).then((snapshot:any) => {\n      this.prizes = snapshot;\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/premios/premios.ts","import {Component} from '@angular/core';\nimport {NavController, NavParams} from 'ionic-angular';\nimport {AuthService} from \"../../services/auth-service\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {PrizeService} from \"../../services/prize-service\";\nimport 'rxjs/add/operator/take';\n\n@Component({\n    selector: 'page-cashback',\n    templateUrl: 'cashback.html',\n})\nexport class CashbackPage {\n\n    user: any;\n    me: any;\n    cashBack: any;\n\n    constructor(public navCtrl: NavController, public navParams: NavParams,\n                public authService: AuthService, public afAuth: AngularFireAuth,\n                private prizeService: PrizeService) {\n\n        afAuth.authState.subscribe(authData => {\n            if (authData) {\n                this.user = authService.getUserData();\n\n                authService.getUser(this.user.uid).valueChanges().subscribe((snapshot:any) => {\n                    snapshot.uid = snapshot.$key;\n                    this.me = snapshot;\n\n                    this.getCashback(this.me.itin);\n\n                });\n            }\n        });\n    }\n\n    ionViewDidLoad() {\n    }\n\n    getCashback(itin) {\n        this.prizeService.getCashbackPrizes(itin).then((snapshot:any) => {\n            this.cashBack = snapshot;\n            console.log(this.cashBack);\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/cashback/cashback.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the TermosPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-termos',\n  templateUrl: 'termos.html',\n})\nexport class TermosPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad TermosPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/termos/termos.ts","import { Component, ChangeDetectorRef } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { Geolocation } from '@ionic-native/geolocation';\nimport { PlaceService } from \"../../services/place-service\";\nimport { HomePage } from \"../home/home\";\nimport { TripService } from \"../../services/trip-service\";\ndeclare var google: any;\n/*\n Generated class for the LoginPage page.\n\n See http://ionicframework.com/docs/v2/components/#navigation for more info on\n Ionic pages and navigation.\n */\n@Component({\n  selector: 'page-map',\n  templateUrl: 'map.html',\n})\nexport class MapPage {\n  map: any;\n\n  // pin address\n  address: any;\n  marker: any;\n  // marker position on screen\n  markerFromTop = 0;\n  markerFromLeft = 0;\n\n  constructor(public nav: NavController, private geolocation: Geolocation, public chRef: ChangeDetectorRef,\n              public navParams: NavParams, public placeService: PlaceService, public tripService: TripService) {\n  }\n\n  // Load map only after view is initialized\n  ionViewDidLoad() {\n    this.loadMap();\n\n    // set marker position in center of screen\n    // minus marker's size\n    this.markerFromTop = window.screen.height / 2 - 16;\n    this.markerFromLeft = window.screen.width / 2 - 8;\n  }\n\n  loadMap() {\n    // set current location as map center\n    this.geolocation.getCurrentPosition().then((resp) => {\n      let latLng = new google.maps.LatLng(resp.coords.latitude, resp.coords.longitude);\n\n      this.map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 16,\n        center: latLng,\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\n        disableDefaultUI: true,\n      });\n\n      this.marker = new google.maps.Marker({ map: this.map, position: latLng, icon: '../assets/img/pin.png' });\n      this.marker.setMap(this.map);\n\n      // get center's address\n      this.findPlace(latLng);\n\n      this.map.addListener('center_changed', (event) => {\n        let center = this.map.getCenter();\n        this.findPlace(center);\n      })\n    }).catch((error) => {\n      console.log('Error getting location', error);\n    });\n  }\n\n  // find address by LatLng\n  findPlace(latLng) {\n    let geocoder = new google.maps.Geocoder();\n    \n    this.marker.setMap(null);\n    this.marker = new google.maps.Marker({ map: this.map, position: latLng });\n    this.marker.setMap(this.map);\n\n    geocoder.geocode({'latLng': latLng}, (results, status) => {\n      if (status == google.maps.GeocoderStatus.OK) {\n        this.address = results[0];\n        this.chRef.detectChanges();\n      }\n    });\n  }\n\n  // choose address and go back to home page\n  selectPlace() {\n    let address = this.placeService.formatAddress(this.address);\n\n    if (this.navParams.get('type') == 'origin') {\n      this.tripService.setOrigin(address.vicinity, address.location.lat, address.location.lng);\n    } else {\n      this.tripService.setDestination(address.vicinity, address.location.lat, address.location.lng);\n    }\n\n    this.nav.setRoot(HomePage);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/map/map.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\nimport {enableProdMode} from '@angular/core';\nenableProdMode();\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { VehiclesDto } from '../../Dto/VehiclesDto';\nimport { Component } from '@angular/core';\nimport { AlertController, LoadingController, NavController, NavParams, ToastController, Platform } from 'ionic-angular';\n\nimport 'rxjs/Rx'\nimport 'rxjs/add/operator/take';\n//import { Observable } from 'rxjs/Observable';\n//import { map } from 'rxjs/operators';\n\nimport { Geolocation } from '@ionic-native/geolocation';\nimport { PaymentMethodPage } from '../payment-method/payment-method';\nimport { UserPage } from \"../user/user\";\nimport { TrackingPage } from '../tracking/tracking';\n\nimport { PlaceService } from \"../../services/place-service\";\nimport { DealService } from \"../../services/deal-service\";\nimport { SettingService } from \"../../services/setting-service\";\nimport { DriverService } from \"../../services/driver-service\";\nimport { TripService } from \"../../services/trip-service\";\nimport {\n    POSITION_INTERVAL,\n    SHOW_VEHICLES_WITHIN,\n    VEHICLE_LAST_ACTIVE_LIMIT\n} from \"../../services/constants\";\n\n\nimport { AuthService } from \"../../services/auth-service\";\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport firebase from \"firebase/app\";\n//import * as firebase from \"firebase/app\";\n\nimport { google } from '@google/maps';\n\ndeclare var google: any;\n\n// interface IFirebaseTodo {\n//     lat?: any;\n//     lng?: any;\n//     name?: any;\n//     last_active?: any;\n//     distance?: any;\n// }\n\n@Component({\n    selector: 'page-home',\n    templateUrl: 'home.html'\n})\n\n\nexport class HomePage {\n\n    mapId = Math.random() + 'map';\n    mapHeight: number = 480;\n    showModalBg: boolean = false;\n    showVehicles: boolean = false;\n\n    vehicles = new Array();\n    vehicle = new VehiclesDto();\n\n    currentVehicle: any;\n    note: any = '';\n    promocode: any = '';\n    autocompleteItems: any;\n    map: any;\n    origin: any;\n    destination: any;\n    loading: any;\n    distance: number = 0;\n    duration: number = 0;\n    base_fare: number = 0;\n    currency: string;\n    locality: any = {};\n    paymentMethod: string = 'card';\n    activeDrivers: Array<any> = [];\n    driverMarkers: Array<any> = [];\n    locateDriver: any = false;\n    cancelDriver: any = false;\n    drivers: any;\n    user: any;\n    me: any;\n    discount: any = 0;\n    startLatLng: any;\n    destLatLng: any;\n    directionsService: any;\n    directionsDisplay: any;\n    bounds: any;\n    cardNumber: any;\n\n    distanceText: any = '';\n    durationText: any = '';\n\n    //listagem lugares\n    places: any = [];\n\n    //palavras dos campos de busca (search)\n    keyword = '';\n    keyword_destino = '';\n    keyword_origem = '';\n\n    //latitude & longitude\n    lat: number;\n    lon: number;\n\n    type: string = 'origem';\n    not_show_list: boolean = true;\n    driver_escolhido = '';\n    show_msg = true;\n    public alertShown: boolean = false;\n    public driverTracking: any = null;\n    public waitDriverDecision: any = null;\n    public driverStatus: string = null;\n\n    constructor(public nav: NavController, public platform: Platform, public alertCtrl: AlertController,\n        public placeService: PlaceService, private geolocation: Geolocation, \n        public loadingCtrl: LoadingController, public settingService: SettingService,\n        public tripService: TripService, public driverService: DriverService,\n        public afAuth: AngularFireAuth,\n        public afDb: AngularFireDatabase,\n        public toast: ToastController,\n        public authService: AuthService, public translate: TranslateService,\n        public dealService: DealService, public navParams: NavParams) {\n\n        localStorage.setItem(\"isAccepted\", \"false\");\n\n        this.vehicle.id = 1;\n        this.vehicle.name = \"Vip\";\n        this.vehicle.icon = \"./assets/icon/sedan.svg\";\n        this.vehicle.base_fare = 8.0;\n        this.vehicle.minimum_price = 15.00;\n        this.vehicle.fee = 30.50;\n        this.vehicle.active = true;\n        this.vehicles.push(this.vehicle);\n\n        this.vehicle = new VehiclesDto();\n        this.vehicle.id = 2;\n        this.vehicle.name = \"Luxo\"\n        this.vehicle.icon = \"./assets/icon/luxo.svg\"\n        this.vehicle.base_fare = 5.0;\n        this.vehicle.minimum_price = 10.00;\n        this.vehicle.fee = 20.50;\n        this.vehicle.active = true;\n        this.vehicles.push(this.vehicle);\n\n        this.vehicle = new VehiclesDto();\n        this.vehicle.id = 3;\n        this.vehicle.name = \"Social\"\n        this.vehicle.icon = \"./assets/icon/taxi.svg\"\n        this.vehicle.base_fare = 1.0;\n        this.vehicle.minimum_price = 5.50;\n        this.vehicle.fee = 10.50;\n        this.vehicle.active = true;\n        this.vehicles.push(this.vehicle);\n\n        this.vehicle = new VehiclesDto();\n        this.vehicle.id = 4;\n        this.vehicle.name = \"Vans\"\n        this.vehicle.icon = \"./assets/icon/van.svg\"\n        this.vehicle.base_fare = 15.0;\n        this.vehicle.minimum_price = 20.00;\n        this.vehicle.fee = 50.50;\n        this.vehicle.active = true;\n        this.vehicles.push(this.vehicle);\n\n\n        this.platform.ready()\n            .then(() => {\n\n                this.platform.registerBackButtonAction(() => {\n                    if (this.alertShown == false) {\n                        this.presentConfirm();\n                    }\n                }, 0)\n\n                this.translate.setDefaultLang('pt-br');\n                this.origin = tripService.getOrigin();\n                this.origin = { \"lat\": -23.5336069, \"long\": -46.4465054, \"vicinity\": \"Rua Bento Vieira de Castro, 474\" };\n                this.keyword_origem = this.origin ? this.origin.vicinity : '';\n\n                this.destination = tripService.getDestination();\n                this.destination = { \"lat\": -23.5629261, \"long\": -46.6570029 - 23.5336069, \"vicinity\": \"Av.Paulista, 1374\" };\n                this.keyword_destino = this.destination ? this.destination.vicinity : '';\n\n                afAuth.authState.subscribe(authData => {\n                    if (authData) {\n                        this.user = authService.getUserData();\n                        authService.getUser(this.user.uid).valueChanges().subscribe((snapshot: any) => {\n                            //snapshot.uid = snapshot.$key;\n                            //snapshot.uid = snapshot.$key;\n                            if (snapshot) {\n                                snapshot.uid = \"CfQswwkyeaht5raUOcO9ylH26zv2\";\n                                snapshot.name = \"Teste\";\n                            }\n                            else {\n                                snapshot = {};\n                                snapshot.uid = \"CfQswwkyeaht5raUOcO9ylH26zv2\";\n                                snapshot.name = \"Teste\";\n                            }\n\n                            snapshot.uid = \"CfQswwkyeaht5raUOcO9ylH26zv2\";\n                            this.me = snapshot;\n\n                            if (this.me.itin == '' || this.me.id_card == '' || this.me.birthdate == '' ||\n                                this.me.name == '' || this.me.email == '' || this.me.phoneNumber == '' ||\n                                this.me.cnh == '') {\n                                //Caso uma das informações obrigatórias não esteja preenchida, envia pra página do Perfil\n                                this.nav.push(UserPage, { 'uid': this.user.uid });\n                            }\n                        });\n                    }\n                });\n            });\n\n\n    }\n\n\n    ngOnInit() {\n\n    }\n\n    presentConfirm() {\n        let alert = this.alertCtrl.create({\n            title: 'Confirmação',\n            message: 'Deseja realmente sair do Dado Passageiro?',\n            buttons: [\n                {\n                    text: 'Não',\n                    role: 'cancel',\n                    handler: () => {\n                        console.log('Cancel clicked');\n                        this.alertShown = false;\n                    }\n                },\n                {\n                    text: 'Sim',\n                    handler: () => {\n                        console.log('Yes clicked');\n                        this.platform.exitApp();\n                    }\n                }\n            ]\n        });\n        alert.present().then(() => {\n            this.alertShown = true;\n        });\n    }\n\n    //choose a place\n    selectPlace(place) {\n        if (this.type == 'origem') {\n            this.tripService.setOrigin(place.name, place.geometry.location.lat, place.geometry.location.lng);\n        } else {\n            this.tripService.setDestination(place.name, place.geometry.location.lat, place.geometry.location.lng);\n        }\n        this.nav.setRoot(HomePage);\n    }\n\n    //search by address\n    search(tipo) {\n        this.not_show_list = false;\n        if (tipo == 'origem') {\n            this.keyword = this.keyword_origem;\n        } else {\n            this.keyword = this.keyword_destino;\n        }\n        this.type = tipo;\n        this.placeService.searchByAddress(this.keyword, this.lat, this.lon).subscribe((result: any) => {\n            this.hideLoading();\n            this.places = result.results.slice(0, 10);\n\n        });\n    }\n\n    // calculate distance from a place to current position\n    calcDistance(place) {\n        return this.placeService.calcCrow(place.geometry.location.lat, place.geometry.location.lng, this.lat, this.lon).toFixed(1);\n    }\n\n    ionViewWillEnter() {\n\n\n        this.not_show_list = true;\n\n        // on view ready, start loading map\n        this.tripService.getTrips().then((trips: any) => {\n            trips.forEach(trip => {\n\n                if (trip.status == 'waiting' || trip.status == 'accepted' || trip.status == 'going') {\n                    this.nav.setRoot(TrackingPage, { tripId: trip.key });\n                }\n            })\n        });\n\n        this.geolocation.getCurrentPosition().then((resp) => {\n            this.lat = resp.coords.latitude;\n            this.lon = resp.coords.longitude;\n            if (this.type == 'origem') {\n                this.search(this.type);\n            }\n        }).catch((error) => {\n            console.log('Erro na localização', error);\n        });\n\n        this.loadMap();\n\n\n        //this.showDriverOnMap(this.locality);\n    }\n\n    ionViewWillLeave() {\n\n        // if (localStorage.getItem(\"interval_driverTracking\") != null) {\n        //     clearInterval(+localStorage.getItem(\"interval_driverTracking\"));\n        // }\n\n        // if (localStorage.getItem(\"interval_waitDriverDecision\") != null) {\n        //     clearInterval(+localStorage.getItem(\"interval_waitDriverDecision\"));\n        // }\n\n    }\n\n    // get current payment method from service\n    getPaymentMethod() {\n        this.paymentMethod = this.tripService.getPaymentMethod()\n        return this.paymentMethod;\n    }\n\n    choosePaymentMethod1() {\n        let alert = this.alertCtrl.create({ message: 'Forma de Pagamento' });\n        alert.addInput({ type: 'radio', label: 'Cash', value: 'cash', checked: false });\n        this.authService.getCardSetting().subscribe((snapshot: any) => {\n            if (snapshot) {\n                this.cardNumber = snapshot.number;\n                if (this.cardNumber != null || this.cardNumber != undefined)\n                    alert.addInput({ type: 'radio', label: 'Credit Card', value: 'card' });\n            }\n        });\n\n        alert.addButton({ text: 'Cancel' });\n\n        alert.addButton({\n            text: 'Ok',\n            handler: data => {\n                // console.log(data);\n                this.tripService.setPaymentMethod(data);\n            }\n        });\n        alert.present();\n    }\n\n    // toggle active vehicle\n    chooseVehicle(index) {\n        for (var i = 0; i < this.vehicles.length; i++) {\n            this.vehicles[i].active = (i == index);\n            // choose this vehicle type\n            if (i == index) {\n                this.tripService.setVehicle(this.vehicles[i]);\n                this.currentVehicle = this.vehicles[i];\n            }\n        }\n        // start tracking new driver type\n        this.trackDrivers();\n        this.toggleVehicles();\n    }\n\n    goProfilePage() {\n        this.nav.push(UserPage, { user: this.user });\n    }\n\n    async initMap(): Promise<void> {\n        const { Map } = await google.maps.importLibrary(\"maps\") as google.maps.MapsLibrary;\n\n        this.map = new Map(document.getElementById(this.mapId) as HTMLElement, {\n            zoom: 15,\n            center: { lat: -23.5336069, lng: -46.4465054 },\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\n            mapTypeControl: false,\n            zoomControl: true,\n            streetViewControl: false,\n            disableDefaultUI: false,\n            styles: this.placeService.temaWY()\n        });\n        console.log(\"=============\",this.map);\n    }\n\n    // load map\n    loadMap() {\n        this.showLoading();\n        this.show_msg = true;\n\n        this.initMap();\n\n        // get current location\n        // return this.geolocation.getCurrentPosition().then((resp) => {\n        //     this.not_show_list = true;\n\n        //     if (this.origin.location) {\n        //         this.startLatLng = new google.maps.LatLng(this.origin.location.lat, this.origin.location.lng);\n        //     }\n        //     else {\n        //         this.startLatLng = new google.maps.LatLng(resp.coords.latitude, resp.coords.longitude);\n        //     }\n        //     let directionsDisplay;\n        //     let directionsService = new google.maps.DirectionsService();\n        //     directionsDisplay = new google.maps.DirectionsRenderer();\n\n\n        //     this.initMap();\n\n        //     google.maps.event.addListener(this.map, 'center_changed', () => { alert(this.map.getCenter()); });\n            \n\n        //     // this.map = new google.maps.Map(document.getElementById(this.mapId), {\n        //     //     zoom: 15,\n        //     //     center: this.startLatLng,\n        //     //     mapTypeId: google.maps.MapTypeId.ROADMAP,\n        //     //     mapTypeControl: false,\n        //     //     zoomControl: true,\n        //     //     streetViewControl: false,\n        //     //     disableDefaultUI: false,\n        //     //     styles: this.placeService.temaWY()\n        //     // });\n\n        //     let mapx = this.map;\n        //     directionsDisplay.setMap(mapx);\n\n        //     // find map center address\n        //     let geocoder = new google.maps.Geocoder();\n        //     geocoder.geocode({ 'latLng': this.map.getCenter() }, (results, status) => {\n        //         if (status == google.maps.GeocoderStatus.OK) {\n        //             if (!this.origin) {\n        //                 // set map center as origin\n        //                 this.origin = this.placeService.formatAddress(results[0]);\n        //                 this.tripService.setOrigin(this.origin.vicinity, this.origin.location.lat, this.origin.location.lng);\n        //                 this.setOrigin();\n        //                 this.chRef.detectChanges();\n        //             } else {\n        //                 this.setOrigin();\n        //             }\n        //             this.keyword_origem = this.origin.vicinity;\n        //             this.not_show_list = true;\n\n        //             // save locality\n        //             let locality = this.placeService.setLocalityFromGeocoder(results);\n        //             //// console.log('locality', locality);\n        //             // load list vehicles\n        //             this.settingService.getPrices().valueChanges().subscribe((snapshot: any) => {\n        //                 //// console.log('snapshot',snapshot);\n        //                 let obj = snapshot[locality] ? snapshot[locality] : snapshot.default;\n        //                 //// console.log('prices', obj);\n        //                 this.currency = obj.currency;\n        //                 this.base_fare = parseFloat(obj.base_fare);\n        //                 this.tripService.setCurrency(this.currency);\n\n        //                 this.vehicles = [];\n        //                 // calculate price\n        //                 Object.keys(obj.vehicles).forEach(id => {\n        //                     obj.vehicles[id].id = id;\n        //                     this.vehicles.push(obj.vehicles[id]);\n        //                 });\n\n        //                 // calculate distance between origin adn destination\n        //                 if (this.destination) {\n        //                     this.placeService.getDirection(this.origin.location.lat,\n        //                         this.origin.location.lng,\n        //                         this.destination.location.lat,\n        //                         this.destination.location.lng).subscribe((result: any) => {\n        //                             //// console.log(result);\n        //                             if (result.routes.length != 0) {\n        //                                 this.distance = result.routes[0].legs[0].distance.value;\n        //                                 this.duration = result.routes[0].legs[0].duration.value;\n\n        //                                 this.distanceText = result.routes[0].legs[0].distance.text;\n        //                                 this.durationText = result.routes[0].legs[0].duration.text;\n\n        //                                 for (let i = 0; i < this.vehicles.length; i++) {\n        //                                     let minute_price = (Math.round(this.duration / 60)) * parseFloat(this.vehicles[i].price_min);\n        //                                     // 30/60 * 0.50\n        //                                     //0,50\n        //                                     let distance_price = (this.distance / 1000) * parseFloat(this.vehicles[i].price);\n        //                                     //10/1000 * 1,50\n        //                                     //0,015\n\n        //                                     this.vehicles[i].fee = (parseFloat(this.vehicles[i].base_fare) + distance_price + minute_price);\n        //                                     this.vehicles[i].fee = this.vehicles[i].fee.toFixed(2);\n        //                                     //1,00 + 0,015,+ 0,50 = 1,515\n\n        //                                     if (parseFloat(this.vehicles[i].fee) < parseFloat(this.vehicles[i].minimum_price)) {\n        //                                         this.vehicles[i].fee = parseFloat(this.vehicles[i].minimum_price).toFixed(2);\n        //                                     }\n        //                                     //\n        //                                     //// console.log('composicao', this.vehicles[i].fee);\n        //                                 }\n        //                             } else {\n        //                                 this.alertCtrl.create({\n        //                                     subTitle: 'Motorista não encontrado',\n        //                                     buttons: ['OK']\n        //                                 }).present();\n        //                             }\n        //                         });\n        //                 }\n\n        //                 // set first device as default\n        //                 this.vehicles[0].active = true;\n        //                 this.currentVehicle = this.vehicles[0];\n        //                 this.locality = locality;\n        //             });\n        //         }\n        //     });\n\n        //     // add destination to map\n        //     if (this.destination.location) {\n        //         this.destLatLng = new google.maps.LatLng(this.destination.location.lat, this.destination.location.lng);\n        //         var bounds = new google.maps.LatLngBounds();\n        //         bounds.extend(this.startLatLng);\n        //         bounds.extend(this.destLatLng);\n\n        //         mapx.fitBounds(bounds);\n        //         var request = {\n        //             origin: this.startLatLng,\n        //             destination: this.destLatLng,\n        //             travelMode: google.maps.TravelMode.DRIVING\n        //         };\n        //         directionsService.route(request, function (response, status) {\n        //             if (status == google.maps.DirectionsStatus.OK) {\n        //                 //// console.log(response);\n        //                 directionsDisplay.setDirections(response);\n        //                 directionsDisplay.setMap(mapx);\n        //             } else {\n        //                 // console.log(\"error\");\n        //             }\n        //         });\n        //     }\n        //     this.hideLoading();\n        // }).catch((error) => {\n        //     this.hideLoading();\n        //     console.log('Erro na localização', error);\n        // });\n    }\n\n    showPromoPopup() {\n        let prompt = this.alertCtrl.create({\n            title: 'Código de Promoção',\n            message: \"\",\n            inputs: [\n                {\n                    name: 'promocode',\n                    placeholder: 'Código'\n                },\n            ],\n            buttons: [\n                {\n                    text: 'Cancelar',\n                    handler: data => { }\n                },\n                {\n                    text: 'Apply',\n                    handler: data => {\n\n                        firebase.database()\n                            .ref('promocodes')\n                            .orderByChild('code')\n                            .once('value')\n                            .then((promocodes: any) => {\n\n                                let tmp = { key: promocodes.key, ...promocodes.val() };\n\n                                if (tmp != null) {\n                                    this.promocode = tmp.code;\n                                    this.discount = tmp.discount;\n                                    this.tripService.setPromo(tmp.code);\n                                    this.tripService.setDiscount(tmp.discount);\n                                    //// console.log('promo applied', tmp.code, tmp.discount);\n                                }\n                            }, err => console.log(err));\n                    }\n                }\n            ]\n        });\n        prompt.present();\n    }\n\n    // Show note popup when click to 'Notes to user'\n    showNotePopup() {\n        let prompt = this.alertCtrl.create({\n            title: 'Nota para o Motorista',\n            message: \"\",\n            inputs: [\n                {\n                    name: 'nota',\n                    placeholder: 'Nota'\n                },\n            ],\n            buttons: [\n                {\n                    text: 'Cancelar',\n                    handler: data => {\n                        //// console.log('Cancel clicked');\n                    }\n                },\n                {\n                    text: 'Salvar',\n                    handler: data => {\n                        this.note = data;\n                        this.tripService.setNote(data);\n                        //// console.log('Saved clicked');\n                    }\n                }\n            ]\n        });\n        prompt.present();\n    };\n\n    // go to next view when the 'Book' button is clicked\n    book() {\n\n        //para de trackear motoristas \n        if (localStorage.getItem(\"interval_driverTracking\") != null) {\n            clearInterval(+localStorage.getItem(\"interval_driverTracking\"));\n        }\n\n        //para de esperar resposta do motorista\n        if (localStorage.getItem(\"interval_waitDriverDecision\") != null) {\n            clearInterval(+localStorage.getItem(\"interval_waitDriverDecision\"));\n        }\n\n\n        this.locateDriver = true;\n        this.cancelDriver = true;\n\n        // store detail\n        this.tripService.setAvailableDrivers(this.activeDrivers);\n        this.tripService.setDistance(this.distance);\n        this.tripService.setFee(this.currentVehicle.fee);\n        this.tripService.setIcon(this.currentVehicle.icon);\n        this.tripService.setNote(this.note);\n        this.tripService.setPromo(this.promocode);\n        this.tripService.setDiscount(this.discount);\n\n        // this.tripService.setPaymentMethod('');\n        this.drivers = this.tripService.getAvailableDrivers();\n\n        // sort by driver distance and rating\n        this.drivers = this.dealService.sortDriversList(this.drivers);\n\n        //// console.log('Ve os ativos DEAL')\n        console.log(this.drivers);\n\n        if (this.drivers) {\n\n            this.driverStatus = 'Bidding';\n\n            //pega o primeiro\n            let driver = this.drivers[0];\n            this.makeDeal(driver);\n        }\n        else {\n            this.toast.create({ message: 'Nenhum motorista encontrado...', duration: 1000 }).present();\n        }\n\n    }\n\n    makeDeal(driver: any) {\n\n\n        this.dealService.getDriverDeal(driver.key).valueChanges().subscribe((snapshot: any) => {\n\n            console.log(\"getDriverDeal-->\", snapshot);\n\n            if ((snapshot == null) &&\n                (this.driverStatus == 'Bidding')) {\n\n                // create a record\n                //// console.log(snapshot);\n                this.dealService.makeDeal(\n                    driver.key,\n                    this.tripService.getOrigin(),\n                    this.tripService.getDestination(),\n                    this.tripService.getDistance(),\n                    this.tripService.getFee(),\n                    this.tripService.getCurrency(),\n                    this.tripService.getNote(),\n                    this.tripService.getPaymentMethod(),\n                    this.tripService.getPromo(),\n                    this.tripService.getDiscount()\n                ).then(() => {\n                    console.log('Deal set Successfully');\n\n                    this.driverStatus = 'TripSet';\n\n                    if (localStorage.getItem(\"interval_waitDriverDecision\") != null) {\n                        clearInterval(+localStorage.getItem(\"interval_waitDriverDecision\"));\n                    }\n                    let waitDriverDecision = setInterval(() => {\n                        this.askDriverDecision(driver);\n                    }, POSITION_INTERVAL);\n                    localStorage.setItem('interval_waitDriverDecision', waitDriverDecision.toString());\n\n                })\n                    .catch((err) => {\n                        console.error('Trip Set Error', err);\n                        this.book();\n\n                    });\n            }\n        });\n\n    }\n\n\n    // Verifica se motorista aceitou/rejeitou/expirou\n    askDriverDecision(driver: any) {\n        driver = 0;\n        // let sub = this.dealService.getDriverDeal(driver.key).valueChanges().subscribe((snap: any) => {\n        //     console.log('askDriverDecision - getDriverDeal -->', snap);\n\n        //     if (snap != null) {\n        //         if (snap.status == DEAL_STATUS_PENDING) {\n        //             return false;\n        //         }\n        //         else {\n\n        //             if (localStorage.getItem(\"isAccepted\") == \"false\") {\n\n        //                 localStorage.setItem(\"isAccepted\", \"true\");\n\n        //                 if (localStorage.getItem(\"interval_driverTracking\") != null) {\n        //                     clearInterval(+localStorage.getItem(\"interval_driverTracking\"));\n        //                 }\n        //                 if (localStorage.getItem(\"interval_waitDriverDecision\") != null) {\n        //                     clearInterval(+localStorage.getItem(\"interval_waitDriverDecision\"));\n        //                 }\n\n        //                 if (snap.status == DEAL_STATUS_ACCEPTED) {\n\n        //                     this.dealService.removeDeal(driver.key);\n\n        //                     this.drivers = [];\n        //                     this.tripService.setId(snap.tripId);\n\n        //                     this.nav.setRoot(TrackingPage);\n        //                 }\n        //                 else {\n        //                     this.cancelTrip();\n        //                     this.nav.setRoot(HomePage);\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     else {\n        //         if (localStorage.getItem(\"interval_driverTracking\") != null) {\n        //             clearInterval(+localStorage.getItem(\"interval_driverTracking\"));\n        //         }\n        //         if (localStorage.getItem(\"interval_waitDriverDecision\") != null) {\n        //             clearInterval(+localStorage.getItem(\"interval_waitDriverDecision\"));\n        //         }\n        //     }\n\n        // });\n    }\n\n    // choose payment method\n    choosePaymentMethod() {\n        // go to payment method page\n        this.nav.push(PaymentMethodPage);\n    }\n\n    // add origin marker to map\n    setOrigin() {\n        // add origin and destination marker\n        let latLng = new google.maps.LatLng(this.origin.location.lat, this.origin.location.lng);\n        let startMarker = new google.maps.Marker({\n            map: this.map,\n            animation: google.maps.Animation.DROP,\n            position: latLng\n        });\n        startMarker.setMap(this.map);\n        if (this.destination)\n            startMarker.setMap(null);\n        // set map center to origin address\n        this.map.setCenter(latLng);\n    }\n\n    showLoading() {\n        this.loading = this.loadingCtrl.create({\n            content: 'Aguarde...'\n        });\n        this.loading.present();\n    }\n\n    hideLoading() {\n        if (this.loading.present()) {\n            this.loading.dismiss();\n        }\n    }\n\n    // show or hide vehicles\n    toggleVehicles() {\n        this.showVehicles = !this.showVehicles;\n        this.showModalBg = (this.showVehicles == true);\n    }\n\n    // track drivers\n    trackDrivers() {\n\n        debugger;\n        if (localStorage.getItem(\"interval_driverTracking\") != null) {\n            clearInterval(+localStorage.getItem(\"interval_driverTracking\"));\n        }\n        let driverTracking = setInterval(() => {\n            this.showDriverOnMap(this.locality);\n        }, POSITION_INTERVAL);\n        localStorage.setItem('interval_driverTracking', driverTracking.toString());\n    }\n\n    // show drivers on map\n    showDriverOnMap(locality) {\n\n        // firebase.database()\n        //     .ref('localities')\n        //     .child(locality)\n        //     .child(this.currentVehicle.id.toUpperCase())\n        //     .once('value', drivers => {\n\n        firebase.database()\n            .ref('driversOnline')\n            .orderByChild(\"locality\")\n            .equalTo(locality)\n\n            .once('value', drivers => {\n                let vehicles: any = [];\n                drivers.forEach(driver => {\n                    vehicles.push({ key: driver.key, ...driver.val() });\n                });\n\n                //clear vehicles\n                this.activeDrivers = [];\n                this.driverMarkers.forEach((vehicle) => {\n                    vehicle.setMap(null);\n                });\n\n                // only show near vehicle\n                vehicles.forEach(vehicle => {\n\n                    if (this.currentVehicle.id.toUpperCase() == vehicle.vehicleType) {\n\n                        //console.log('vehicle-->', vehicle);\n                        // console.log(vehicle.name);\n\n                        // only show vehicle which has last active < 30 secs & distance < 5km\n                        //let distance = this.placeService.calcCrow(vehicle.lat, vehicle.lng, this.origin.location.lat, this.origin.location.lng);\n                        let distance = 10000;\n                        //// console.log(distance);\n                        debugger;\n\n                        console.log(\"distance:\" + distance, \" Last Active: \" + (Date.now() - vehicle.last_active), \" Last Active2: \" + (Date.now() - vehicle.last_active), ' -  atual: ' + Date.now(), ' - last: ' + vehicle.last_active, 'nome:' + vehicle.name);\n                        // checking last active time and distance\n\n                        const dt = Date.now();\n                        if (distance < SHOW_VEHICLES_WITHIN && (dt - vehicle.last_active) / 2 < VEHICLE_LAST_ACTIVE_LIMIT) {\n                            // create or update\n                            let latLng = new google.maps.LatLng(vehicle.lat, vehicle.lng);\n\n                            let marker = new google.maps.Marker({\n                                map: this.map,\n                                position: latLng,\n                                icon: {\n                                    url: this.currentVehicle.map_icon,\n                                    size: new google.maps.Size(32, 32),\n                                    origin: new google.maps.Point(0, 0),\n                                    anchor: new google.maps.Point(16, 16),\n                                    scaledSize: new google.maps.Size(32, 32)\n                                },\n                            });\n\n                            // add vehicle and marker to the list\n                            vehicle.distance = distance;\n                            // console.log(marker);\n                            this.driverMarkers.push(marker);\n                            this.activeDrivers.push(vehicle);\n                        } else {\n                            console.log('This vehicle is too far:', vehicle);\n                        }\n                    }\n                });\n\n            }, err => {\n                console.log(\"Erro---> show drivers on map:\", err);\n            });\n\n\n    }\n\n\n\n    cancelTrip() {\n\n        this.locateDriver = false;\n        this.cancelDriver = true;\n\n        setTimeout(() => {\n            this.locateDriver = false;\n            this.cancelDriver = false;\n        }, 5000);\n\n        this.show_msg = false;\n        this.dealService.removeDeal(this.drivers[0]);\n        this.destination = null;\n        this.keyword_destino = '';\n        this.loadMap();\n        this.durationText = '';\n        this.distanceText = '';\n\n        this.book();\n\n    }\n}\n\n// // Add a new document in collection \"cities\"\n// firebase.database().ref(\"promocodes\").set([\n//     {\n//     code: 1010,\n//     discount: 1\n//     },\n//     {\n//         code: 2020,\n//         discount: 2\n//         },\n//         {\n//             code: 3030,\n//             discount: 3\n//             },\n//     {\n//         code: 4040,\n//         discount: 4\n//         }\n//     ])\n// .then(function() {\n//     console.log(\"Document successfully written!\");\n// })\n// .catch(function(error) {\n//     console.error(\"Error writing document: \", error);\n// });\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from \"@angular/core\";\nimport { AngularFireDatabase } from \"@angular/fire/database/database\";\nimport { Place } from \"./place\";\nimport { AuthService } from \"./auth-service\";\nimport 'rxjs/add/operator/take';\nimport firebase from \"firebase/app\";\n\n@Injectable()\nexport class TripService {\n  private id: any;\n  private trips: any;\n  private currency: string;\n  private origin: any;\n  private destination: any;\n  private distance: number;\n  private fee: number;\n  private note: string;\n  private paymentMethod: any = 'cash';\n  private vehicle: any;\n  private promocode: any;\n  private discount: any;\n  // vehicle's icon\n  private icon: any;\n  private availableDrivers: Array<any> = [];\n\n  constructor(public db: AngularFireDatabase, public authService: AuthService) {\n\n  }\n\n  getAll() {\n    return this.trips;\n  }\n\n  setId(id) {\n    return this.id = id;\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  setCurrency(currency) {\n    return this.currency = currency;\n  }\n\n  getCurrency() {\n    return this.currency;\n  }\n\n  setOrigin(vicinity, lat, lng) {\n    let place = new Place(vicinity, lat, lng);\n    return this.origin = place.getFormatted();\n  }\n\n  getOrigin() {\n    return this.origin;\n  }\n\n  setDestination(vicinity, lat, lng) {\n    let place = new Place(vicinity, lat, lng);\n    return this.destination = place.getFormatted();\n  }\n\n  getDestination() {\n    return this.destination\n  }\n\n  setDistance(distance) {\n    return this.distance = distance;\n  }\n\n  getDistance() {\n    return this.distance;\n  }\n\n  setFee(fee) {\n    return this.fee = fee;\n  }\n\n  getFee() {\n    return this.fee;\n  }\n\n  setNote(note) {\n    return this.note = note;\n  }\n\n  getNote() {\n    return this.note;\n  }\n\n  setPromo(promocode){\n    return this.promocode = promocode;\n  }\n  getPromo(){\n    return this.promocode;\n  }\n\n  setDiscount(discount){\n    return this.discount = discount;\n  }\n  getDiscount(){\n    return this.discount;\n  }\n\n  setPaymentMethod(method) {\n    return this.paymentMethod = method;\n  }\n\n  getPaymentMethod() {\n    return this.paymentMethod;\n  }\n\n  setVehicle(vehicle) {\n    return this.vehicle = vehicle;\n  }\n\n  getVehicle() {\n    return this.vehicle;\n  }\n\n  setIcon(icon) {\n    return this.icon = icon;\n  }\n\n  getIcon() {\n    return this.icon;\n  }\n\n  setAvailableDrivers(vehicles) {\n    console.log(vehicles);\n    this.availableDrivers = vehicles;\n  }\n\n  getAvailableDrivers() {\n    return this.availableDrivers;\n  }\n\n  getTrip(id) {\n    return this.db.object('trips/' + id);\n  }\n\n  getTrips() {\n    let user = this.authService.getUserData();\n    return firebase.database()\n            .ref(\"trips\")\n            .orderByChild(\"passengerId\")\n            .equalTo(user.uid)\n            .once(\"value\").then ( (snapshot:any) => {\n\n              let trips: any = [];\n              snapshot.forEach(trip => {\n                    trips.push({ key: trip.key, ...trip.val() });\n                });\n              return trips;\n            });\n\n  }\n\n  cancelTrip(id){\n    return this.db.object('trips/'+id).update({ status: 'canceled'})\n  }\n\n  finishTrip(id){\n    return this.db.object('trips/'+id).update({ status: 'finished'})\n  }\n\n  rateTrip(tripId, stars) {\n    return this.db.object('trips/' + tripId).update({\n      rating: parseInt(stars)\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/trip-service.ts","import {ErrorHandler, NgModule} from '@angular/core';\nimport {IonicApp, IonicModule, IonicErrorHandler} from 'ionic-angular';\nimport {MyApp} from './app.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {Keyboard } from '@ionic-native/keyboard/ngx';\nimport {HttpModule } from '@angular/http';\nimport {Geolocation} from '@ionic-native/geolocation';\nimport {IonicStorageModule} from '@ionic/storage';\n\n// Import the AF2 Module\nimport {AngularFireModule} from '@angular/fire';\nimport {AngularFireDatabaseModule} from '@angular/fire/database';\nimport {AngularFireAuthModule} from '@angular/fire/auth';\n\n// Import moment module\nimport {MomentModule} from 'angular2-moment';\n\n// import services\nimport {DriverService} from '../services/driver-service';\n\nimport {PlaceService} from '../services/place-service';\nimport {TripService} from '../services/trip-service';\nimport {SettingService} from \"../services/setting-service\";\nimport {DealService} from \"../services/deal-service\";\nimport {AuthService} from \"../services/auth-service\";\n\nimport {HomePage} from '../pages/home/home';\nimport {LoginPage} from '../pages/login/login';\nimport {PaymentMethodPage} from '../pages/payment-method/payment-method';\nimport {PlacesPage} from '../pages/places/places';\nimport {RegisterPage} from '../pages/register/register';\nimport {TrackingPage} from '../pages/tracking/tracking';\nimport {MapPage} from \"../pages/map/map\";\nimport {UserPage} from '../pages/user/user';\n\nimport {HttpClientModule, HttpClient} from '@angular/common/http';\nimport {TranslateModule, TranslateLoader} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\n\nimport {ComponentsModule} from \"../components/components.module\";\nimport {PaymentsPage} from \"../pages/payments/payments\";\nimport {IndicacaoPage} from \"../pages/indicacao/indicacao\";\nimport {BrMaskerModule} from 'brmasker-ionic-3';\nimport {BankService} from \"../services/bank-service\";\nimport {CepProvider} from '../providers/cep/cep';\nimport {CadastroDadoProvider} from '../providers/cadastro-dado/cadastro-dado';\nimport {Camera} from '@ionic-native/camera';\nimport {File} from \"@ionic-native/file/ngx\";\nimport {TermosPage} from \"../pages/termos/termos\";\nimport {GanhosPage} from \"../pages/ganhos/ganhos\";\nimport {PremiosPage} from \"../pages/premios/premios\";\nimport {CashbackPage} from \"../pages/cashback/cashback\";\nimport { SplashPage } from '../pages/splash/splash';\n\n\nimport {PrizeService} from \"../services/prize-service\";\n\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n\nexport function createTranslateLoader(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/lang/', '.json');\n}\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyCYCDMmzOBqDE0H89ng2ogEFw9rYGzR-QA\",\n    authDomain: \"bumingapp-f10d3.firebaseapp.com\",\n    databaseURL: \"https://bumingapp-f10d3.firebaseio.com\",\n    projectId: \"bumingapp-f10d3\",\n    storageBucket: \"bumingapp-f10d3.appspot.com\",\n    messagingSenderId: \"699781527060\"\n};\n\n\n@NgModule({\n    declarations: [\n        MyApp,\n        SplashPage,\n        HomePage,\n        LoginPage,\n        PaymentMethodPage,\n        PlacesPage,\n        RegisterPage,\n        TrackingPage,\n        MapPage,\n        UserPage,\n        PaymentsPage,\n        IndicacaoPage,\n        TermosPage,\n        GanhosPage,\n        PremiosPage,\n        CashbackPage\n    ],\n    imports: [\n        BrowserModule,\n        HttpModule,\n        IonicStorageModule.forRoot(),\n        HttpClientModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: createTranslateLoader,\n                deps: [HttpClient]\n            }\n        }),\n        AngularFireModule.initializeApp(firebaseConfig),\n        AngularFireDatabaseModule,\n        AngularFireAuthModule,\n        MomentModule,\n        IonicModule.forRoot(MyApp, {\n            mode: 'md'\n        }),\n        BrMaskerModule,\n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [\n        MyApp,\n        SplashPage,\n        HomePage,\n        LoginPage,\n        PaymentMethodPage,\n        PlacesPage,\n        RegisterPage,\n        TrackingPage,\n        MapPage,\n        UserPage,\n        PaymentsPage,\n        IndicacaoPage,\n        TermosPage,\n        GanhosPage,\n        PremiosPage,\n        CashbackPage\n    ],\n    providers: [\n        StatusBar,\n        SplashScreen,\n        Keyboard,\n        Geolocation,\n        DriverService,\n        PlaceService,\n        TripService,\n        SettingService,\n        DealService,\n        AuthService,\n        Camera,\n        File,\n        {provide: ErrorHandler, useClass: IonicErrorHandler},\n        ComponentsModule,\n        CepProvider,\n        BankService,\n        CadastroDadoProvider,\n        PrizeService,\n    ]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform, ModalController } from 'ionic-angular';\nimport { ViewChild } from '@angular/core';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n// import pages\nimport { LoginPage } from '../pages/login/login';\nimport { HomePage } from '../pages/home/home';\n\nimport { AngularFireAuth } from \"@angular/fire/auth/auth\";\nimport { AuthService } from \"../services/auth-service\";\nimport { UserPage } from \"../pages/user/user\";\n\nimport { TranslateService } from '@ngx-translate/core';\nimport {GanhosPage} from \"../pages/ganhos/ganhos\";\nimport {TermosPage} from \"../pages/termos/termos\";\n\nimport { SplashPage } from '../pages/splash/splash';\n\n// end import pages\n\n@Component({\n  templateUrl: 'app.html',\n  queries: {\n    nav: new ViewChild('content')\n  }\n})\n\nexport class MyApp {\n  rootPage: any;\n  nav: any;\n  user = {};\n\n  public pages = [\n    {\n      title: 'Perfil',\n      icon: 'person',\n      count: 0,\n      component: UserPage\n    },\n    {\n      title: 'Escritório Virtual',\n      icon: 'briefcase',\n      count: 0,\n      component: GanhosPage\n    },\n    {\n      title: 'Termos e condições',\n      icon: 'paper',\n      count: 0,\n      component: TermosPage\n    },\n    {\n      title: 'Logout',\n      icon: 'exit',\n      count: 0,\n      component: LoginPage\n    }\n  ];\n\n\n  constructor(platform: Platform,\n    public statusBar: StatusBar,\n    public splashScreen: SplashScreen,\n    public afAuth: AngularFireAuth,\n    public authService: AuthService, \n    public modalController: ModalController,\n    public translate: TranslateService) {\n    this.translate.setDefaultLang('pt-br');\n    this.translate.use('pt-br');\n    \n    platform.ready().then(() => {\n\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      //  statusBar.styleDefault();\n      splashScreen.hide();\n\n\n      let splash = modalController.create(SplashPage);\n      splash.present();\n\n      // check for login stage, then redirect\n      afAuth.authState.subscribe(authData => {\n\n        if (authData) {\n          this.nav.setRoot(HomePage);\n        } else {\n           this.nav.setRoot(LoginPage , {'email':  'daridados@gmail.com','password':'120202' });\n        }\n      });\n\n      // // get user data\n      // afAuth.authState.subscribe(authData => {\n      //   if (authData) {\n      //     this.user = authService.getUserData();\n      //   }\n      // });\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    if (page.title == 'Perfil'){\n      this.nav.push(page.component, {user: this.authService.getUserData()});\n    }\n    else{\n      this.nav.push(page.component);\n    }\n\n  }\n\n  // view current user profile\n  viewProfile() {\n    this.nav.push(UserPage, {\n      user: this.user\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","export class VehiclesDto {\r\n    public $key: string;\r\n    public $value:string;\r\n    public uid: string;\r\n    public id: number;\r\n\r\n    public icon: string;\r\n    public name: string; \r\n\r\n    public base_fare: number;\r\n    public price_min: number;\r\n    public price: number;\r\n\r\n    public minimum_price: number;\r\n    public fee: number;\r\n    \r\n    public active: boolean;\r\n\r\n    public data_cadastro: Date;\r\n    public data_atualizacao: Date;\r\n\r\n    constructor() {\r\n\r\n        this.$key = \"AIzaSyCYXDwRtUucrZnDfsCyNQZelvrbWQMi_bg\";\r\n        this.$value = \"AIzaSyCYXDwRtUucrZnDfsCyNQZelvrbWQMi_bg\";\r\n        this.uid= \"AIzaSyCYXDwRtUucrZnDfsCyNQZelvrbWQMi_bg\";\r\n        this.id= 0;\r\n        this.icon= \"\";\r\n        this.name= \"\"; \r\n        this.base_fare= 0;\r\n        this.price_min= 0;\r\n        this.price= 0;\r\n        this.fee= 0;\r\n        this.minimum_price= 0;\r\n        this.active= true;\r\n        this.data_cadastro= new Date();\r\n        this.data_atualizacao= new Date();\r\n    }\r\n\r\n    // var vehicles = new Array();\r\n\r\n// var vehicle = new VehiclesDto();\r\n// vehicle.id = 1;\r\n// vehicle.name = \"Vip\";\r\n// vehicle.icon = \"../../assets/icon/suv.svg\";\r\n// vehicle.base_fare=8.0;\r\n// vehicle.minimum_price=15.00;\r\n// vehicle.fee=0;\r\n// vehicle.active=true;\r\n// vehicles.push(vehicle);\r\n\r\n// var vehicle = new VehiclesDto();\r\n// vehicle.id = 2;\r\n// vehicle.name = \"Luxo\"\r\n// vehicle.icon = \"../../assets/icon/suv.svg\"\r\n// vehicle.base_fare=5.0;\r\n// vehicle.minimum_price=10.00;\r\n// vehicle.fee=0;\r\n// vehicle.active=true;\r\n// vehicles.push(vehicle);\r\n\r\n// var vehicle = new VehiclesDto();\r\n// vehicle.id = 3;\r\n// vehicle.name = \"Social\"\r\n// vehicle.icon = \"../../assets/icon/suv.svg\"\r\n// vehicle.base_fare=1.0;\r\n// vehicle.minimum_price=5.50;\r\n// vehicle.fee=0;\r\n// vehicle.active=true;\r\n// vehicles.push(vehicle);\r\n\r\n// var vehicle = new VehiclesDto();\r\n// vehicle.id = 4;\r\n// vehicle.name = \"Vans\"\r\n// vehicle.icon = \"../../assets/icon/vans.svg\"\r\n// vehicle.base_fare=15.0;\r\n// vehicle.minimum_price=20.00;\r\n// vehicle.fee= 0;\r\n// vehicle.active=true;\r\n// vehicles.push(vehicle);\r\n\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Dto/VehiclesDto.ts","\n\nexport let SHOW_VEHICLES_WITHIN = 5; // within 5km\nexport let POSITION_INTERVAL = 2000; // 2000ms\nexport let VEHICLE_LAST_ACTIVE_LIMIT = 60000; // 60s\n\nexport let DEAL_STATUS_PENDING = 'pending';\nexport let DEAL_STATUS_ACCEPTED = 'accepted';\nexport let DEAL_TIMEOUT = 20; // 20s\nexport let TRIP_STATUS_WAITING = 'waiting';\nexport let TRIP_STATUS_NOTIFIED = 'notified';\nexport let TRIP_STATUS_GOING = 'going';\nexport let TRIP_STATUS_PAID = 'paid';\nexport let TRIP_STATUS_FINISHED = 'finished';\nexport let TRIP_STATUS_CANCELED = 'canceled';\n\nexport let EMAIL_VERIFICATION_ENABLED = true; // send verification email after user register\nexport let ENABLE_SIGNUP = true;\nexport let SOS = \"\";\n\n// NOTE: Please update your firebase configurations on src/app/app.module.ts\n\nexport let GOOGLE_MAP_API_KEY = \"AIzaSyC80LrSr49CyKFXGNRJqj5zW3pUwaIN2PQ\";\nexport let GOOGLE_MAP_BASE_URL = \"https://maps.googleapis.com/maps/api/\";\nexport let DEFAULT_AVATAR = \"http://placehold.it/150x150\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/constants.ts","import { Component,ViewChild, OnInit } from '@angular/core';\nimport { Keyboard } from '@ionic-native/keyboard/ngx';\nimport { Platform, NavController, NavParams, AlertController, LoadingController, ToastController } from 'ionic-angular';\nimport { RegisterPage } from '../register/register';\nimport { HomePage } from '../home/home'\nimport { AuthService } from \"../../services/auth-service\";\nimport * as firebase from 'firebase';\n//import * as $ from 'jquery';\nimport { ENABLE_SIGNUP } from '../../services/constants';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IndicacaoPage } from \"../indicacao/indicacao\";\nimport { CadastroDadoProvider } from \"../../providers/cadastro-dado/cadastro-dado\";\nimport { Afiliado } from '../../Dto/AfiliadoDto';\n\n@Component({\n    selector: 'page-login',\n    templateUrl: 'login.html'\n\n})\n\nexport class LoginPage implements OnInit{\n    @ViewChild('input') input: any;\n\n    email: string = \"\";\n    password: string = \"\";\n\n    user: any;\n    isRegisterEnabled: any = true;\n    public alertShown:boolean = false;\n\n    constructor(\n        private platform: Platform,\n        public nav: NavController, public navParams: NavParams, \n        public authService: AuthService, public alertCtrl: AlertController,\n        public loadingCtrl: LoadingController, public toast: ToastController,\n        public keyboard: Keyboard,public translate: TranslateService,\n        public dado: CadastroDadoProvider) {\n        this.isRegisterEnabled = ENABLE_SIGNUP;\n        this.translate.setDefaultLang('pt-br');\n\n        this.email = this.navParams.get('email');\n        this.password = this.navParams.get('password');\n    }\n\n    ionViewDidEnter() {\n        // setTimeout(() => {\n        //     //console.log(\"passou aqui===================\");\n        //     //this.input.setFocus();\n        //     },150);\n    } \n\n   \n\n    ngOnInit() {\n\n            this.platform.ready()\n            .then(() => {\n\n                // this.keyboard.onKeyboardShow()\n                //   .subscribe(e => {\n                //     //$('body').animate({ 'marginTop': - e.keyboardHeight / 2 + 'px' }, 200);\n                //   });\n\n                // this.keyboard.onKeyboardHide()\n                //   .subscribe(e => {\n                //     //$('body').animate({ 'marginTop': - 0 + 'px' }, 200);\n                //   });\n\n\n                this.platform.registerBackButtonAction(() => {\n                    if (this.alertShown==false) {\n                      this.presentConfirm();  \n                    }\n                  }, 0)\n         \n\n            });\n\n\n    }\n\n    presentConfirm() {\n        let alert = this.alertCtrl.create({\n          title: 'Confirmação',\n          message: 'Deseja realmente sair do Dado Passageiro?',\n          buttons: [\n            {\n              text: 'Não',\n              role: 'cancel',\n              handler: () => {\n                console.log('Cancel clicked');\n                this.alertShown=false;\n              }\n            },\n            {\n              text: 'Sim',\n              handler: () => {\n                console.log('Yes clicked');\n                this.platform.exitApp();\n              }\n            }\n          ]\n        });\n         alert.present().then(()=>{\n          this.alertShown=true;\n        });\n      }\n\n\n    signup() {\n        this.alertCtrl.create({subTitle: 'Demonstração App Dado', buttons: ['ok']}).present();\n        //this.nav.setRoot(RegisterPage);\n        this.nav.setRoot(RegisterPage, {'minhaIndicacao': \"0001\", 'indicadoPor': \"9999\", 'origin':'new'})\n\n        this.nav.push(IndicacaoPage);\n\n    }\n\n    reset() {\n        if (this.email) {\n            firebase.auth().sendPasswordResetEmail(this.email)\n                .then(data =>\n                    this.toast.create({ message: 'Verifique seu e-mail', duration: 3000 }).present())\n                .catch(err => this.toast.create({ message: err.message, duration: 3000 }).present())\n        }\n    }\n\n  \n    // login() {\n    //     let msg = \"\";\n    //     let verifyDado = false;\n\n    //     if (this.email.length == 0 || this.password.length == 0) {\n    //         this.alertCtrl.create({ subTitle: 'Dados inválidos', buttons: ['ok'] }).present();\n    //     } else {\n    //         let loading = this.loadingCtrl.create({ content: 'Fazendo login...' });\n    //         loading.present();\n\n    //         this.dado.login(this.email, this.password).then(authData => {\n\n    //             let afiliado = <Afiliado>JSON.parse(localStorage.getItem('User'));\n\n    //             this.authService.login(this.email, this.password).then(authData => {\n\n    //                 loading.dismiss();\n\n    //                 afiliado.uid = authData.uid;\n    //                 this.authService.updateUserProfileFromDb(afiliado);\n\n    //                 this.nav.setRoot(HomePage);\n    //             }, (error: any) => {\n\n    //                 loading.dismiss();\n    //                 debugger;\n    //                 if(error.code ==  'auth/wrong-password') {\n    //                     const user = firebase.auth().currentUser;\n    //                     debugger;\n    //                     const credential = firebase.auth.EmailAuthProvider.credential(\n    //                         afiliado.email, \n    //                         afiliado.pswd\n    //                     );\n    //                     user.reauthenticateWithCredential(credential)\n    //                     .then(user => {\n\n    //                         afiliado.uid = user.uid;\n    //                         this.toast.create({ message: 'Registro OK', duration: 3000 }).present();\n    //                         this.authService.updateUserProfileFromDb(afiliado);\n\n    //                         this.nav.setRoot(HomePage);\n\n    //                     }).catch(function (error) {\n    //                         console.debug(error);\n    //                         var errorMessage = error.message;\n    //                         let alert = this.alertCtrl.create({\n    //                             message: \"Ocorreu um erro no login. Por favor, tente novamente.\",\n    //                             buttons: ['OK']\n    //                         });\n    //                         alert.present();\n\n    //                     });\n    //                 }\n    //                 else {\n\n    //                     firebase.auth().createUserWithEmailAndPassword(afiliado.email, afiliado.pswd)\n    //                     .then(user => {\n\n    //                         afiliado.uid = user.uid;\n    //                         this.toast.create({ message: 'Registro OK', duration: 3000 }).present();\n    //                         this.authService.updateUserProfileFromDb(afiliado);\n\n    //                         this.nav.setRoot(HomePage);\n\n    //                     }).catch(function (error) {\n    //                         console.debug(error);\n    //                         var errorMessage = error.message;\n    //                         let alert = this.alertCtrl.create({\n    //                             message: \"Ocorreu um erro no login. Por favor, tente novamente.\",\n    //                             buttons: ['OK']\n    //                         });\n    //                         alert.present();\n\n    //                     });\n\n    //                 }\n\n    //             });\n\n\n    //         }, (error: any) => {\n    //             loading.dismiss();\n    //             let alert = this.alertCtrl.create({\n    //                 message: \"Ocorreu um erro no login. Por favor, tente novamente.\",\n    //                 buttons: ['OK']\n    //             });\n    //             alert.present();\n    //         });\n\n    //     }\n    // }\n\n    // // in case of login error\n    // loading.dismiss();\n    // switch (error.code) {\n    //     case 'auth/user-not-found':\n    //         msg = \"Usuário não encontrado.\";\n    //         //verifyDado = true;\n    //         break;\n    //     case 'auth/wrong-password':\n    //         msg = \"Senha incorreta. Por favor, tente novamente.\";\n    //         break;\n    //     default:\n    //         msg = \"Ocorreu um erro no login. Por favor, tente novamente.\";\n    //         break;\n    // }\n    // if (!verifyDado) {\n    //     let alert = this.alertCtrl.create({\n    //         message: msg,\n    //         buttons: ['OK']\n    //     });\n    //     alert.present();\n    // }\n    // else {\n    //     this.dado.searchByEmail(this.email)\n    //         .then(result => {\n    //             if (result) {\n    //                 this.nav.push(RegisterPage, { 'snapshot': result[0], 'origin': 'login' });\n    //             }\n    //             else {\n    //                 let alert = this.alertCtrl.create({\n    //                     message: msg,\n    //                     buttons: ['OK']\n    //                 });\n    //                 alert.present();\n    //             }\n    //         })\n    // }\n    // let user:any = {};\n    // user.name =  afiliado.primeiro_nome + \" \" + afiliado.segundo_nome;\n    // user.email = afiliado.email;\n    // user.password = afiliado.pswd;\n    // user.itin = afiliado.cpf;\n    // user.phoneNumber= afiliado.telefone;\n    // user.birthdate= afiliado.data_nascimento;\n    // user.photo= afiliado.foto;\n    // user.indicadoPor = (afiliado.codigo_afiliacao_p != null && afiliado.codigo_afiliacao_p != \"\") ? afiliado.codigo_afiliacao_p : afiliado.codigo_afiliacao_m;\n    // user.minhaIndicacao = afiliado.codigo_afiliacao;\n    // user.data_cadastro= afiliado.data_criacao;\n    //this.authService.register(user);\n\n\n\n\n    login() {\n        let msg = \"\";\n        let verifyDado = false;\n\n        if (this.email.length == 0 || this.password.length == 0) {\n            this.alertCtrl.create({subTitle: \"Por favor, Informe:<br><b>Email</b> e<br> <b>Senha</b>\", buttons: ['ok']}).present();\n        } else {\n            let loading = this.loadingCtrl.create({content: 'Fazendo login...'});\n            loading.present();\n\n\n            this.authService.login(this.email, this.password).then((authData:any) => {\n\n                console.log(\"login===authData=============\",authData);\n                loading.dismiss();\n\n                this.user = this.authService.getUserData();\n\n                this.dado.login(this.email, this.password).then((response:any) => {\n\n                    //snapshot.uid = snapshot.$key;\n                    if (response) {\n                        response.uid = \"CfQswwkyeaht5raUOcO9ylH26zv2\";\n                        response.name = \"Teste\";\n                    }\n                    else {\n                        response = {};\n                        response.uid = \"CfQswwkyeaht5raUOcO9ylH26zv2\";\n                        response.name = \"Teste\";\n                    }\n                    let afiliado = <Afiliado>JSON.parse(localStorage.getItem('User'));\n    \n                    if (!afiliado) {\n\n                        afiliado = response;\n                    }\n\n                    this.authService.updateUserProfileFromDb(this.user, afiliado);\n\n                    this.nav.setRoot(HomePage);\n    \n                }, (error: any) => {\n                    loading.dismiss();\n                    console.log(\"this.dado.login========================\",error);\n                    let alert = this.alertCtrl.create({\n                        message: \"Ocorreu um erro no login. Por favor, tente novamente.\",\n                        buttons: ['OK']\n                    });\n                    alert.present();\n                });\n\n            }, (error:any) => {\n                // in case of login error\n                loading.dismiss();\n\n                switch (error.code) {\n                    case 'auth/user-not-found':\n                        msg = \"Usuário não encontrado.\";\n                        break;\n                    case 'auth/wrong-password':\n                        msg = \"Senha incorreta. Por favor, tente novamente.\";\n                        break;\n                    default:\n                        msg = \"Ocorreu um erro no login. Por favor, tente novamente.\";\n                        break;\n                }\n                if (!verifyDado){\n                    let alert = this.alertCtrl.create({\n                        message: msg,\n                        buttons: ['OK']\n                    });\n                    alert.present();\n                }\n                else{\n\n                    // this.dado.searchByEmail(this.email)\n                    //     .then( result => {\n                    //         if (result){\n                    //             this.nav.push(RegisterPage, {'snapshot': result[0], 'origin':'login'});\n                    //         }\n                    //         else{\n                    //             let alert = this.alertCtrl.create({\n                    //                 message: msg,\n                    //                 buttons: ['OK']\n                    //             });\n                    //             alert.present();\n                    //         }\n                    //     })\n                }\n            });\n\n        }   \n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CadastroDadoProvider {\n\n  constructor(public http: HttpClient) {\n  }\n\n  searchUserData(inputCPF: string) {\n    let resultado: any;\n    let dadoURL = 'http://bumingapi.bumingapp.com.br/public/api/v1/cadastro/verify/'+inputCPF;\n    return new Promise((resolve, reject) => {\n      this.http.get(dadoURL)\n          .subscribe(function(result){\n            resultado = result;\n            resolve(resultado);\n          }, () => {\n            reject('0');\n          })\n    });\n  }\n\n  searchAffiliateByCode(inputCode: string) {\n    let resultado: any;\n    let dadoURL = 'http://bumingapi.bumingapp.com.br/public/api/v1/afiliados/search/'+inputCode;\n    return new Promise((resolve, reject) => {\n      this.http.get(dadoURL)\n          .subscribe(function(result){\n            resultado = result;\n            resolve(resultado);\n          }, () => {\n            reject('0');\n          })\n    });\n  }\n\n  verifyAffiliateCode(inputCode: string){\n    let resultado: any;\n    let dadoURL = 'http://bumingapi.bumingapp.com.br/public/api/v1/afiliados/verify/'+inputCode;\n    return new Promise((resolve, reject) => {\n      this.http.get(dadoURL)\n          .subscribe(function(result){\n            resultado = result;\n            resolve(resultado);\n          }, () => {\n            reject('0');\n          })\n    });\n  }\n\n  searchByEmail(inputEmail: string){\n    let resultado: any;\n    let dadoURL = 'http://bumingapi.bumingapp.com.br/public/api/v1/cadastro/search/'+inputEmail;\n    return new Promise((resolve, reject) => {\n      this.http.get(dadoURL)\n          .subscribe(function(result){\n            resultado = result;\n            resolve(resultado);\n          }, () => {\n            reject('0');\n          })\n    });\n  }\n\n\n  login(email: String, pswd:String){\n    let body = { \"email\":email, \"pswd\":pswd};\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n    headers = headers.append('Access-Control-Allow-Origin', \"*\");\n    headers = headers.append('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\n    headers = headers.append('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization, application/json');\n    const options = { headers: headers }\n  \n    let dadoURL = 'http://bumingapi.bumingapp.com.br/public/api/v1/login/';\n    return new Promise((resolve, reject) => {\n      this.http.post(dadoURL,body, options )\n          .subscribe(function(result){\n            if (result[0].email !=  null) {\n              localStorage.setItem('User', JSON.stringify(result[0]));\n              resolve(result[0]);\n            }\n            else{\n              reject('0');\n            }\n          }, (error:any) => {\n            reject('0');\n            console.log(\"error=====\",dadoURL,error);\n          })\n    });\n  }\n\n  save(user: any){\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n    headers = headers.append('Access-Control-Allow-Origin', \"*\");\n    headers = headers.append('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\n    headers = headers.append('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization, application/json');\n    const options = { headers: headers }\n  \n    let dadoURL = 'http://bumingapi.bumingapp.com.br/public/api/v1/save/';\n    return new Promise((resolve, reject) => {\n      this.http.post(dadoURL,user, options )\n          .subscribe(function(result){\n              resolve('1');\n          }, () => {\n            reject('0');\n          })\n    });\n  }\n\n  save_register(user: any){\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n    headers = headers.append('Access-Control-Allow-Origin', \"*\");\n    headers = headers.append('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\n    headers = headers.append('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization, application/json');\n    const options = { headers: headers }\n  \n    let dadoURL = 'http://bumingapi.bumingapp.com.br/public/api/v1/save_register/';\n    return new Promise((resolve, reject) => {\n      this.http.post(dadoURL,user, options )\n          .subscribe(function(result){\n              resolve('1');\n          }, () => {\n            reject('0');\n          })\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/cadastro-dado/cadastro-dado.ts","export class Place {\n  private lat: number;\n  private lng: number;\n  private vicinity: string;\n\n  constructor(vicinity, lat, lng) {\n    this.lat = lat;\n    this.lng = lng;\n    this.vicinity = vicinity;\n  }\n\n  // get place object with formatted data\n  getFormatted() {\n    return {\n      location: {\n        lat: this.lat,\n        lng: this.lng\n      },\n      vicinity: this.vicinity\n    }\n  }\n\n \n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/place.ts","import { Injectable } from \"@angular/core\";\nimport { HttpClient,HttpHeaders } from \"@angular/common/http\";\nimport { GOOGLE_MAP_API_KEY, GOOGLE_MAP_BASE_URL } from './constants'\n\nimport 'rxjs/add/operator/map'\n\n@Injectable()\nexport class PlaceService {\n  private baseUrl: any;\n  private apiKey: any;\n  private locality: any;\n\n  constructor(public http: HttpClient) {\n    this.baseUrl = GOOGLE_MAP_BASE_URL;\n    this.apiKey = GOOGLE_MAP_API_KEY;\n  }\n\n  // search by address\n  searchByAddress(address, lat, lng) {\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n    headers = headers.append('Access-Control-Allow-Origin', \"*\");\n    headers = headers.append('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\n    headers = headers.append('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization, application/json');\n    const options = { headers: headers }\n\n    let url = this.baseUrl + 'place/nearbysearch/json?key=' + this.apiKey\n        + '&keyword=' + encodeURI(address)\n        + '&location=' + lat + ',' + lng\n        + '&radius=50000';\n\n    //return this.http.get(url, options).map(res => res..json())\n    //let resultado: any;\n\n    return this.http.get(url, options);\n        // .subscribe(function (result: any) {\n        //   resultado = JSON.parse(result);\n        //   return resultado;\n        // }, () => {\n        //   return {};\n        // })\n\n  }\n\n  // get direction between to points\n  getDirection(lat1, lon1, lat2, lon2) {\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n    headers = headers.append('Access-Control-Allow-Origin', \"*\");\n    headers = headers.append('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\n    headers = headers.append('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization, application/json');\n    const options = { headers: headers }\n\n    let url = this.baseUrl + 'directions/json?key=' + this.apiKey\n        + '&origin=' + lat1 + ',' + lon1\n        + '&destination=' + lat2 + ',' + lon2;\n\n        console.log(\"getDirectionpassou e foi======================\");\n\n    //return this.http.get(url,options).map(res => res.json());\n    //let resultado: any;\n\n    return this.http.get(url, options);\n        // .subscribe(function (result: any) {\n        //   resultado = JSON.parse(result);\n        //   return resultado;\n        // }, () => {\n        //   return {};\n        // })\n\n\n  }\n\n\n  //This function takes in latitude and longitude of two location and returns the distance between them as the crow flies (in km)\n  calcCrow(lat1, lon1, lat2, lon2) {\n    let R = 6371; // km\n    let dLat = this.toRad(lat2 - lat1);\n    let dLon = this.toRad(lon2 - lon1);\n    lat1 = this.toRad(lat1);\n    lat2 = this.toRad(lat2);\n\n    let a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    let d = R * c;\n\n    return d;\n  }\n\n  // Converts numeric degrees to radians\n  toRad(value) {\n    return value * Math.PI / 180;\n  }\n\n  /**\n   * Convert geocoder address to place object\n   * @param address: Geocoder address result\n   * @returns {{location: {lat: any, lng: any}, vicinity: string}}\n   */\n  formatAddress(address) {\n    console.log('endereço',address);\n    let components = address.address_components;\n    let vicinity =  components[1].short_name + ', ' + components[0].short_name;\n\n    return {\n      location: {\n        lat: address.geometry.location.lat(),\n        lng: address.geometry.location.lng()\n      },\n      vicinity: vicinity\n    }\n  }\n\n  // set locality from geocoder result\n  // @param results: Geocoder array results\n  setLocalityFromGeocoder(results) {\n    let component;\n    let address;\n\n    for (let i = 0; i < results.length; i++) {\n      address = results[i];\n      for (let j = 0; j < address.address_components.length; j++) {\n        component = address.address_components[j];\n\n        // if (component.types[0] == 'administrative_area_level_2') {\n        if (component.types[0] == 'locality') {\n          // escape firebase characters\n          let locality = component.short_name.replace(/[\\%\\.\\#\\$\\/\\[\\]]/, '_');\n          this.setLocality(locality);\n\n          return locality;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  setLocality(locality) {\n    return this.locality = locality;\n  }\n\n  getLocality() {\n    return this.locality;\n  }\n  \n\n  temaRetro() {\n\n    return [\n      { elementType: 'geometry', stylers: [{ color: '#ebe3cd' }] },\n      { elementType: 'labels.text.fill', stylers: [{ color: '#523735' }] },\n      { elementType: 'labels.text.stroke', stylers: [{ color: '#f5f1e6' }] },\n      {\n        featureType: 'administrative',\n        elementType: 'geometry.stroke',\n        stylers: [{ color: '#c9b2a6' }]\n      },\n      {\n        featureType: 'administrative.land_parcel',\n        elementType: 'geometry.stroke',\n        stylers: [{ color: '#dcd2be' }]\n      },\n      {\n        featureType: 'administrative.land_parcel',\n        elementType: 'labels.text.fill',\n        stylers: [{ color: '#ae9e90' }]\n      },\n      {\n        featureType: 'landscape.natural',\n        elementType: 'geometry',\n        stylers: [{ color: '#dfd2ae' }]\n      },\n      {\n        featureType: 'poi',\n        elementType: 'geometry',\n        stylers: [{ color: '#dfd2ae' }]\n      },\n      {\n        featureType: 'poi',\n        elementType: 'labels.text.fill',\n        stylers: [{ color: '#93817c' }]\n      },\n      {\n        featureType: 'poi.park',\n        elementType: 'geometry.fill',\n        stylers: [{ color: '#a5b076' }]\n      },\n      {\n        featureType: 'poi.park',\n        elementType: 'labels.text.fill',\n        stylers: [{ color: '#447530' }]\n      },\n      {\n        featureType: 'road',\n        elementType: 'geometry',\n        stylers: [{ color: '#f5f1e6' }]\n      },\n      {\n        featureType: 'road.arterial',\n        elementType: 'geometry',\n        stylers: [{ color: '#fdfcf8' }]\n      },\n      {\n        featureType: 'road.highway',\n        elementType: 'geometry',\n        stylers: [{ color: '#f8c967' }]\n      },\n      {\n        featureType: 'road.highway',\n        elementType: 'geometry.stroke',\n        stylers: [{ color: '#e9bc62' }]\n      },\n      {\n        featureType: 'road.highway.controlled_access',\n        elementType: 'geometry',\n        stylers: [{ color: '#e98d58' }]\n      },\n      {\n        featureType: 'road.highway.controlled_access',\n        elementType: 'geometry.stroke',\n        stylers: [{ color: '#db8555' }]\n      },\n      {\n        featureType: 'road.local',\n        elementType: 'labels.text.fill',\n        stylers: [{ color: '#806b63' }]\n      },\n      {\n        featureType: 'transit.line',\n        elementType: 'geometry',\n        stylers: [{ color: '#dfd2ae' }]\n      },\n      {\n        featureType: 'transit.line',\n        elementType: 'labels.text.fill',\n        stylers: [{ color: '#8f7d77' }]\n      },\n      {\n        featureType: 'transit.line',\n        elementType: 'labels.text.stroke',\n        stylers: [{ color: '#ebe3cd' }]\n      },\n      {\n        featureType: 'transit.station',\n        elementType: 'geometry',\n        stylers: [{ color: '#dfd2ae' }]\n      },\n      {\n        featureType: 'water',\n        elementType: 'geometry.fill',\n        stylers: [{ color: '#b9d3c2' }]\n      },\n      {\n        featureType: 'water',\n        elementType: 'labels.text.fill',\n        stylers: [{ color: '#92998d' }]\n      }\n\n    ]\n  }\n\n  temaDark() {\n\n    return [\n\n      { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },\n      { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },\n      { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },\n      {\n        featureType: 'administrative.locality',\n        elementType: 'labels.text.fill',\n        stylers: [{ color: '#d59563' }]\n      },\n      {\n        featureType: 'poi',\n        elementType: 'labels.text.fill',\n        stylers: [{ color: '#d59563' }]\n      },\n      {\n        featureType: 'poi.park',\n        elementType: 'geometry',\n        stylers: [{ color: '#263c3f' }]\n      },\n      {\n        featureType: 'poi.park',\n        elementType: 'labels.text.fill',\n        stylers: [{ color: '#6b9a76' }]\n      },\n      {\n        featureType: 'road',\n        elementType: 'geometry',\n        stylers: [{ color: '#38414e' }]\n      },\n      {\n        featureType: 'road',\n        elementType: 'geometry.stroke',\n        stylers: [{ color: '#212a37' }]\n      },\n      {\n        featureType: 'road',\n        elementType: 'labels.text.fill',\n        stylers: [{ color: '#9ca5b3' }]\n      },\n      {\n        featureType: 'road.highway',\n        elementType: 'geometry',\n        stylers: [{ color: '#746855' }]\n      },\n      {\n        featureType: 'road.highway',\n        elementType: 'geometry.stroke',\n        stylers: [{ color: '#1f2835' }]\n      },\n      {\n        featureType: 'road.highway',\n        elementType: 'labels.text.fill',\n        stylers: [{ color: '#f3d19c' }]\n      },\n      {\n        featureType: 'transit',\n        elementType: 'geometry',\n        stylers: [{ color: '#2f3948' }]\n      },\n      {\n        featureType: 'transit.station',\n        elementType: 'labels.text.fill',\n        stylers: [{ color: '#d59563' }]\n      },\n      {\n        featureType: 'water',\n        elementType: 'geometry',\n        stylers: [{ color: '#17263c' }]\n      },\n      {\n        featureType: 'water',\n        elementType: 'labels.text.fill',\n        stylers: [{ color: '#515c6d' }]\n      },\n      {\n        featureType: 'water',\n        elementType: 'labels.text.stroke',\n        stylers: [{ color: '#17263c' }]\n      }]\n  }\n\n  temaWY() {\n\n    return [\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"weight\": \"2.00\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#9c9c9c\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#f2f2f2\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape.man_made\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"saturation\": -100\n            },\n            {\n                \"lightness\": 45\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#eeeeee\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#7b7b7b\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#46bcec\"\n            },\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#c8d7d4\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#070707\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]}\n      ];\n\n    }\n\n\n\n    temaDado() {\n\n      return [\n      {\n       \n        \"featureType\": \"all\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            },\n            {\n                \"hue\": \"#ff0000\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"color\": \"#eb452f\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative.country\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"color\": \"#2c2c2c\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative.country\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#606060\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative.neighborhood\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"color\": \"#eb452f\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape.man_made\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#fff1f1\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape.man_made\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"hue\": \"#ff0000\"\n            },\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape.man_made\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"color\": \"#eb452f\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffd6d6\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"color\": \"#eb452f\"\n            }\n        ]\n      }\n    ];\n\n    }\n\n  }\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/place-service.ts","var map = {\n\t\"./af\": 345,\n\t\"./af.js\": 345,\n\t\"./ar\": 346,\n\t\"./ar-dz\": 347,\n\t\"./ar-dz.js\": 347,\n\t\"./ar-kw\": 348,\n\t\"./ar-kw.js\": 348,\n\t\"./ar-ly\": 349,\n\t\"./ar-ly.js\": 349,\n\t\"./ar-ma\": 350,\n\t\"./ar-ma.js\": 350,\n\t\"./ar-ps\": 351,\n\t\"./ar-ps.js\": 351,\n\t\"./ar-sa\": 352,\n\t\"./ar-sa.js\": 352,\n\t\"./ar-tn\": 353,\n\t\"./ar-tn.js\": 353,\n\t\"./ar.js\": 346,\n\t\"./az\": 354,\n\t\"./az.js\": 354,\n\t\"./be\": 355,\n\t\"./be.js\": 355,\n\t\"./bg\": 356,\n\t\"./bg.js\": 356,\n\t\"./bm\": 357,\n\t\"./bm.js\": 357,\n\t\"./bn\": 358,\n\t\"./bn-bd\": 359,\n\t\"./bn-bd.js\": 359,\n\t\"./bn.js\": 358,\n\t\"./bo\": 360,\n\t\"./bo.js\": 360,\n\t\"./br\": 361,\n\t\"./br.js\": 361,\n\t\"./bs\": 362,\n\t\"./bs.js\": 362,\n\t\"./ca\": 363,\n\t\"./ca.js\": 363,\n\t\"./cs\": 364,\n\t\"./cs.js\": 364,\n\t\"./cv\": 365,\n\t\"./cv.js\": 365,\n\t\"./cy\": 366,\n\t\"./cy.js\": 366,\n\t\"./da\": 367,\n\t\"./da.js\": 367,\n\t\"./de\": 368,\n\t\"./de-at\": 369,\n\t\"./de-at.js\": 369,\n\t\"./de-ch\": 370,\n\t\"./de-ch.js\": 370,\n\t\"./de.js\": 368,\n\t\"./dv\": 371,\n\t\"./dv.js\": 371,\n\t\"./el\": 372,\n\t\"./el.js\": 372,\n\t\"./en-au\": 373,\n\t\"./en-au.js\": 373,\n\t\"./en-ca\": 374,\n\t\"./en-ca.js\": 374,\n\t\"./en-gb\": 375,\n\t\"./en-gb.js\": 375,\n\t\"./en-ie\": 376,\n\t\"./en-ie.js\": 376,\n\t\"./en-il\": 377,\n\t\"./en-il.js\": 377,\n\t\"./en-in\": 378,\n\t\"./en-in.js\": 378,\n\t\"./en-nz\": 379,\n\t\"./en-nz.js\": 379,\n\t\"./en-sg\": 380,\n\t\"./en-sg.js\": 380,\n\t\"./eo\": 381,\n\t\"./eo.js\": 381,\n\t\"./es\": 382,\n\t\"./es-do\": 383,\n\t\"./es-do.js\": 383,\n\t\"./es-mx\": 384,\n\t\"./es-mx.js\": 384,\n\t\"./es-us\": 385,\n\t\"./es-us.js\": 385,\n\t\"./es.js\": 382,\n\t\"./et\": 386,\n\t\"./et.js\": 386,\n\t\"./eu\": 387,\n\t\"./eu.js\": 387,\n\t\"./fa\": 388,\n\t\"./fa.js\": 388,\n\t\"./fi\": 389,\n\t\"./fi.js\": 389,\n\t\"./fil\": 390,\n\t\"./fil.js\": 390,\n\t\"./fo\": 391,\n\t\"./fo.js\": 391,\n\t\"./fr\": 392,\n\t\"./fr-ca\": 393,\n\t\"./fr-ca.js\": 393,\n\t\"./fr-ch\": 394,\n\t\"./fr-ch.js\": 394,\n\t\"./fr.js\": 392,\n\t\"./fy\": 395,\n\t\"./fy.js\": 395,\n\t\"./ga\": 396,\n\t\"./ga.js\": 396,\n\t\"./gd\": 397,\n\t\"./gd.js\": 397,\n\t\"./gl\": 398,\n\t\"./gl.js\": 398,\n\t\"./gom-deva\": 399,\n\t\"./gom-deva.js\": 399,\n\t\"./gom-latn\": 400,\n\t\"./gom-latn.js\": 400,\n\t\"./gu\": 401,\n\t\"./gu.js\": 401,\n\t\"./he\": 402,\n\t\"./he.js\": 402,\n\t\"./hi\": 403,\n\t\"./hi.js\": 403,\n\t\"./hr\": 404,\n\t\"./hr.js\": 404,\n\t\"./hu\": 405,\n\t\"./hu.js\": 405,\n\t\"./hy-am\": 406,\n\t\"./hy-am.js\": 406,\n\t\"./id\": 407,\n\t\"./id.js\": 407,\n\t\"./is\": 408,\n\t\"./is.js\": 408,\n\t\"./it\": 409,\n\t\"./it-ch\": 410,\n\t\"./it-ch.js\": 410,\n\t\"./it.js\": 409,\n\t\"./ja\": 411,\n\t\"./ja.js\": 411,\n\t\"./jv\": 412,\n\t\"./jv.js\": 412,\n\t\"./ka\": 413,\n\t\"./ka.js\": 413,\n\t\"./kk\": 414,\n\t\"./kk.js\": 414,\n\t\"./km\": 415,\n\t\"./km.js\": 415,\n\t\"./kn\": 416,\n\t\"./kn.js\": 416,\n\t\"./ko\": 417,\n\t\"./ko.js\": 417,\n\t\"./ku\": 418,\n\t\"./ku-kmr\": 419,\n\t\"./ku-kmr.js\": 419,\n\t\"./ku.js\": 418,\n\t\"./ky\": 420,\n\t\"./ky.js\": 420,\n\t\"./lb\": 421,\n\t\"./lb.js\": 421,\n\t\"./lo\": 422,\n\t\"./lo.js\": 422,\n\t\"./lt\": 423,\n\t\"./lt.js\": 423,\n\t\"./lv\": 424,\n\t\"./lv.js\": 424,\n\t\"./me\": 425,\n\t\"./me.js\": 425,\n\t\"./mi\": 426,\n\t\"./mi.js\": 426,\n\t\"./mk\": 427,\n\t\"./mk.js\": 427,\n\t\"./ml\": 428,\n\t\"./ml.js\": 428,\n\t\"./mn\": 429,\n\t\"./mn.js\": 429,\n\t\"./mr\": 430,\n\t\"./mr.js\": 430,\n\t\"./ms\": 431,\n\t\"./ms-my\": 432,\n\t\"./ms-my.js\": 432,\n\t\"./ms.js\": 431,\n\t\"./mt\": 433,\n\t\"./mt.js\": 433,\n\t\"./my\": 434,\n\t\"./my.js\": 434,\n\t\"./nb\": 435,\n\t\"./nb.js\": 435,\n\t\"./ne\": 436,\n\t\"./ne.js\": 436,\n\t\"./nl\": 437,\n\t\"./nl-be\": 438,\n\t\"./nl-be.js\": 438,\n\t\"./nl.js\": 437,\n\t\"./nn\": 439,\n\t\"./nn.js\": 439,\n\t\"./oc-lnc\": 440,\n\t\"./oc-lnc.js\": 440,\n\t\"./pa-in\": 441,\n\t\"./pa-in.js\": 441,\n\t\"./pl\": 442,\n\t\"./pl.js\": 442,\n\t\"./pt\": 443,\n\t\"./pt-br\": 444,\n\t\"./pt-br.js\": 444,\n\t\"./pt.js\": 443,\n\t\"./ro\": 445,\n\t\"./ro.js\": 445,\n\t\"./ru\": 446,\n\t\"./ru.js\": 446,\n\t\"./sd\": 447,\n\t\"./sd.js\": 447,\n\t\"./se\": 448,\n\t\"./se.js\": 448,\n\t\"./si\": 449,\n\t\"./si.js\": 449,\n\t\"./sk\": 450,\n\t\"./sk.js\": 450,\n\t\"./sl\": 451,\n\t\"./sl.js\": 451,\n\t\"./sq\": 452,\n\t\"./sq.js\": 452,\n\t\"./sr\": 453,\n\t\"./sr-cyrl\": 454,\n\t\"./sr-cyrl.js\": 454,\n\t\"./sr.js\": 453,\n\t\"./ss\": 455,\n\t\"./ss.js\": 455,\n\t\"./sv\": 456,\n\t\"./sv.js\": 456,\n\t\"./sw\": 457,\n\t\"./sw.js\": 457,\n\t\"./ta\": 458,\n\t\"./ta.js\": 458,\n\t\"./te\": 459,\n\t\"./te.js\": 459,\n\t\"./tet\": 460,\n\t\"./tet.js\": 460,\n\t\"./tg\": 461,\n\t\"./tg.js\": 461,\n\t\"./th\": 462,\n\t\"./th.js\": 462,\n\t\"./tk\": 463,\n\t\"./tk.js\": 463,\n\t\"./tl-ph\": 464,\n\t\"./tl-ph.js\": 464,\n\t\"./tlh\": 465,\n\t\"./tlh.js\": 465,\n\t\"./tr\": 466,\n\t\"./tr.js\": 466,\n\t\"./tzl\": 467,\n\t\"./tzl.js\": 467,\n\t\"./tzm\": 468,\n\t\"./tzm-latn\": 469,\n\t\"./tzm-latn.js\": 469,\n\t\"./tzm.js\": 468,\n\t\"./ug-cn\": 470,\n\t\"./ug-cn.js\": 470,\n\t\"./uk\": 471,\n\t\"./uk.js\": 471,\n\t\"./ur\": 472,\n\t\"./ur.js\": 472,\n\t\"./uz\": 473,\n\t\"./uz-latn\": 474,\n\t\"./uz-latn.js\": 474,\n\t\"./uz.js\": 473,\n\t\"./vi\": 475,\n\t\"./vi.js\": 475,\n\t\"./x-pseudo\": 476,\n\t\"./x-pseudo.js\": 476,\n\t\"./yo\": 477,\n\t\"./yo.js\": 477,\n\t\"./zh-cn\": 478,\n\t\"./zh-cn.js\": 478,\n\t\"./zh-hk\": 479,\n\t\"./zh-hk.js\": 479,\n\t\"./zh-mo\": 480,\n\t\"./zh-mo.js\": 480,\n\t\"./zh-tw\": 481,\n\t\"./zh-tw.js\": 481\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 924;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 924\n// module chunks = 3","import {Component} from '@angular/core';\nimport {NavController, LoadingController, NavParams} from 'ionic-angular';\nimport {PlaceService} from '../../services/place-service';\nimport {Geolocation} from '@ionic-native/geolocation';\nimport {HomePage} from \"../home/home\";\nimport {MapPage} from \"../map/map\";\nimport {TripService} from \"../../services/trip-service\";\n\n@Component({\n    selector: 'page-places',\n    templateUrl: 'places.html'\n})\nexport class PlacesPage {\n    // all places\n    places: any = [];\n\n    // search keyword\n    keyword = '';\n\n    // lat & lon\n    lat: number;\n    lon: number;\n\n    type: string = 'destination';\n\n    // loading object\n    loading: any;\n\n    // page loaded flag\n    pageLoaded = false;\n\n    constructor(public nav: NavController, public placeService: PlaceService, public geolocation: Geolocation,\n                public loadingCtrl: LoadingController, public navParams: NavParams, public tripService: TripService) {\n        this.loading = this.loadingCtrl.create({\n            content: 'Aguarde...'\n        });\n\n        this.geolocation.getCurrentPosition().then((resp) => {\n            this.lat = resp.coords.latitude;\n            this.lon = resp.coords.longitude;\n            if (this.navParams.get('type') == 'origin') {\n                this.search();\n                this.type = this.navParams.get('type');\n            }\n        }).catch((error) => {\n            console.log('Erro na localização', error);\n        });\n    }\n\n    // show search input\n    ionViewDidEnter() {\n        this.pageLoaded = true;\n    }\n\n    // hide search input\n    ionViewWillLeave() {\n        this.pageLoaded = false;\n    }\n\n    // choose a place\n    selectPlace(place) {\n        console.log(place);\n        if (this.navParams.get('type') == 'origin') {\n            this.tripService.setOrigin(place.name, place.geometry.location.lat, place.geometry.location.lng);\n            console.log(\"origin set\");\n        } else {\n            this.tripService.setDestination(place.name, place.geometry.location.lat, place.geometry.location.lng);\n            console.log(\"destination set\");\n        }\n        this.nav.setRoot(HomePage);\n    }\n\n    // clear search input\n    clear() {\n        this.keyword = '';\n        this.search();\n    }\n\n    // search by address\n    search($event = null) {\n        //this.showLoading();\n        this.placeService.searchByAddress(this.keyword, this.lat, this.lon).subscribe((result:any) => {\n            this.hideLoading();\n            this.places = result.results.slice(0, 10);\n        });\n        /*setTimeout(() => {\n            this.hideLoading()\n        }, 5000);*/\n    }\n\n    // calculate distance from a place to current position\n    calcDistance(place) {\n        return this.placeService.calcCrow(place.geometry.location.lat, place.geometry.location.lng, this.lat, this.lon).toFixed(1);\n    }\n\n    showLoading() {\n        this.loading = this.loadingCtrl.create({\n            content: 'Aguarde...'\n        });\n        this.loading.present();\n    }\n\n    hideLoading() {\n        this.loading.dismiss();\n    }\n\n    // open map page\n    openMap() {\n        this.nav.push(MapPage, {type: this.navParams.get('type')});\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/places/places.ts","import { NgModule } from '@angular/core';\nimport { PaymentGatewayComponent } from './payment-gateway/payment-gateway';\n\n\n@NgModule({\n\tdeclarations: [PaymentGatewayComponent],\n\timports: [],\n\texports: [PaymentGatewayComponent],\n\tproviders: [\n\t\t//PayPalOriginal\n\t]\n})\nexport class ComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.module.ts","import {Component} from '@angular/core';\nimport {AlertController, App, IonicPage, NavController, NavParams} from 'ionic-angular';\nimport {AngularFireDatabase} from \"@angular/fire/database\";\n\n\n@IonicPage()\n@Component({\n    selector: 'page-payments',\n    templateUrl: 'payments.html',\n})\nexport class PaymentsPage {\n\n    constructor(public navCtrl: NavController, public navParams: NavParams,\n                public db: AngularFireDatabase,\n                public alertCtrl: AlertController, public app: App) {\n\n    }\n\n    ionViewDidLoad() {\n        let tripId = this.navParams.get('tripId');\n        let fee = this.navParams.get('fee');\n        this.makePayment(tripId, fee);\n    }\n\n    makePayment(tripId: any, fee) {\n        tripId = 0;\n        fee=0;\n        //const PRODUCTION_CLIENT_ID = '';\n        //const SANDBOX_CLIENT_ID = 'Adir4laMT-WmIFU4U7nuHQaHEypcK7ydual-IkmVCisDd9xXHLRfue8qT29bTSdO5rbqo4fQF8kHqokM';\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/payments/payments.ts"],"sourceRoot":""}